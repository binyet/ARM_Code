; generated by ARM C/C++ Compiler, 5.03 [Build 24]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\SDRAM\lcdlib.o --asm_dir=.\SDRAM\ --list_dir=.\SDRAM\ --depend=.\SDRAM\lcdlib.d --cpu=ARM920T --apcs=interwork -O0 -I..\Common\Inc -I.\Include -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\Samsung --omf_browse=.\SDRAM\lcdlib.crf Source\lcdlib.c]
                          ARM

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  Lcd_Init PROC
;;;47     *********************************************************************************************/
;;;48     void Lcd_Init(int type)
000000  e59f2f20          LDR      r2,|L1.3880|
;;;49     {
;;;50         switch(type)
000004  e0401002          SUB      r1,r0,r2
000008  e1500002          CMP      r0,r2
00000c  0a000140          BEQ      |L1.1300|
000010  ca000014          BGT      |L1.104|
000014  e2422c22          SUB      r2,r2,#0x2200
000018  e0401002          SUB      r1,r0,r2
00001c  e1500002          CMP      r0,r2
000020  0a000092          BEQ      |L1.624|
000024  ca000007          BGT      |L1.72|
000028  e3e01a01          MVN      r1,#0x1000
00002c  e0911000          ADDS     r1,r1,r0
000030  0a00001f          BEQ      |L1.180|
000034  e3510001          CMP      r1,#1
000038  0a000040          BEQ      |L1.320|
00003c  e3510003          CMP      r1,#3
000040  1a00029f          BNE      |L1.2756|
000044  ea000064          B        |L1.476|
                  |L1.72|
000048  e3510001          CMP      r1,#1
00004c  0a0000b1          BEQ      |L1.792|
000050  e3e02c21          MVN      r2,#0x2100
000054  e0911002          ADDS     r1,r1,r2
000058  0a0000d3          BEQ      |L1.940|
00005c  e3510002          CMP      r1,#2
000060  1a000297          BNE      |L1.2756|
000064  ea0000fd          B        |L1.1120|
                  |L1.104|
000068  e3510c02          CMP      r1,#0x200
00006c  0a00020a          BEQ      |L1.2204|
000070  ca000006          BGT      |L1.144|
000074  e3510001          CMP      r1,#1
000078  0a000152          BEQ      |L1.1480|
00007c  e3510003          CMP      r1,#3
000080  0a00017d          BEQ      |L1.1660|
000084  e3510007          CMP      r1,#7
000088  1a00028d          BNE      |L1.2756|
00008c  ea0001a7          B        |L1.1840|
                  |L1.144|
000090  e3e02c02          MVN      r2,#0x200
000094  e0911002          ADDS     r1,r1,r2
000098  0a00022d          BEQ      |L1.2388|
00009c  e3510002          CMP      r1,#2
0000a0  0a000259          BEQ      |L1.2572|
0000a4  e2411bf7          SUB      r1,r1,#0x3dc00
0000a8  e2511014          SUBS     r1,r1,#0x14
0000ac  1a000284          BNE      |L1.2756|
0000b0  ea0001cc          B        |L1.2024|
                  |L1.180|
;;;51         {
;;;52             case MODE_STN_1BIT:
0000b4  e1a00000          MOV      r0,r0
;;;53            	    frameBuffer1Bit=(UINT32T (*)[SCR_XSIZE_STN/32])LCDFRAMEBUFFER;
0000b8  e3a01431          MOV      r1,#0x31000000
0000bc  e59f2e68          LDR      r2,|L1.3884|
0000c0  e5821000          STR      r1,[r2,#0]  ; frameBuffer1Bit
;;;54            	
;;;55            	    //CLKVAL_STN_MONO：(20) MVAL_USED:(0)设置为4位单扫描，1bpp STN显示模式，ENVID=off
;;;56         	    rLCDCON1=(CLKVAL_STN_MONO<<8)|(MVAL_USED<<7)|(1<<5)|(0<<1)|0;
0000c4  e59f1e64          LDR      r1,|L1.3888|
0000c8  e3a0244d          MOV      r2,#0x4d000000
0000cc  e5821000          STR      r1,[r2,#0]
;;;57     
;;;58        	        //设置LINEVAL_STN(垂直尺寸）为LCD_YSIZE_STN(240)-1，其他位在STN LCD显示时都应设置为0
;;;59     	        rLCDCON2=(0<<24)|(LINEVAL_STN<<14)|(0<<6)|(0<<0);	// It is not TFT LCD. So,.....    		
0000d0  e3a019ef          MOV      r1,#0x3bc000
0000d4  e5821004          STR      r1,[r2,#4]
;;;60     	    
;;;61     	        //WDLY_STN：0   HOZVAL_STN：LCD_XSIZE_STN/4-1   LINEBLANK_MONO：(1 &0xff)
;;;62         	    rLCDCON3=(WDLY_STN<<19)|(HOZVAL_STN<<8)|(LINEBLANK_MONO<<0);
0000d8  e59f1e54          LDR      r1,|L1.3892|
0000dc  e5821008          STR      r1,[r2,#8]
;;;63     	    
;;;64         	    //MVAL：13  WLH_STN：0
;;;65         	    rLCDCON4=(MVAL<<8)|(WLH_STN<<0);
0000e0  e3a01c0d          MOV      r1,#0xd00
0000e4  e582100c          STR      r1,[r2,#0xc]
;;;66         
;;;67         	    rLCDCON5=0;
0000e8  e3a01000          MOV      r1,#0
0000ec  e5821010          STR      r1,[r2,#0x10]
;;;68     	    
;;;69     	        rLCDSADDR1=(((UINT32T)frameBuffer1Bit>>22)<<21)|M5D((UINT32T)frameBuffer1Bit>>1);		
0000f0  e59f1e34          LDR      r1,|L1.3884|
0000f4  e5911000          LDR      r1,[r1,#0]  ; frameBuffer1Bit
0000f8  e59f2e38          LDR      r2,|L1.3896|
0000fc  e00210a1          AND      r1,r2,r1,LSR #1
000100  e59f2e24          LDR      r2,|L1.3884|
000104  e5922000          LDR      r2,[r2,#0]  ; frameBuffer1Bit
000108  e1a02b22          LSR      r2,r2,#22
00010c  e1811a82          ORR      r1,r1,r2,LSL #21
000110  e3a0244d          MOV      r2,#0x4d000000
000114  e5821014          STR      r1,[r2,#0x14]
;;;70     	        rLCDSADDR2=M5D(((UINT32T)frameBuffer1Bit+(SCR_XSIZE_STN*LCD_YSIZE_STN/8))>>1);
000118  e59f1e0c          LDR      r1,|L1.3884|
00011c  e5911000          LDR      r1,[r1,#0]  ; frameBuffer1Bit
000120  e2811c4b          ADD      r1,r1,#0x4b00
000124  e59f2e0c          LDR      r2,|L1.3896|
000128  e00210a1          AND      r1,r2,r1,LSR #1
00012c  e3a0244d          MOV      r2,#0x4d000000
000130  e5821018          STR      r1,[r2,#0x18]
;;;71     	        rLCDSADDR3=(((SCR_XSIZE_STN-LCD_XSIZE_STN)/16)<<11)|(LCD_XSIZE_STN/16);
000134  e59f1e00          LDR      r1,|L1.3900|
000138  e582101c          STR      r1,[r2,#0x1c]
;;;72           
;;;73                 break;
00013c  ea000262          B        |L1.2764|
                  |L1.320|
;;;74     
;;;75             case MODE_STN_2BIT:
000140  e1a00000          MOV      r0,r0
;;;76         	    frameBuffer2Bit=(UINT32T (*)[SCR_XSIZE_STN/16])LCDFRAMEBUFFER;
000144  e3a01431          MOV      r1,#0x31000000
000148  e59f2df0          LDR      r2,|L1.3904|
00014c  e5821000          STR      r1,[r2,#0]  ; frameBuffer2Bit
;;;77         	    rLCDCON1=(CLKVAL_STN_GRAY<<8)|(MVAL_USED<<7)|(1<<5)|(1<<1)|0;
000150  e59f1dec          LDR      r1,|L1.3908|
000154  e3a0244d          MOV      r2,#0x4d000000
000158  e5821000          STR      r1,[r2,#0]
;;;78        	        
;;;79        	        // 4-bit single scan,2bpp STN,ENVID=off
;;;80         	    rLCDCON2=(0<<24)|(LINEVAL_STN<<14)|(0<<6)|(0<<0);
00015c  e3a019ef          MOV      r1,#0x3bc000
000160  e5821004          STR      r1,[r2,#4]
;;;81         	    rLCDCON3=(WDLY_STN<<19)|(HOZVAL_STN<<8)|(LINEBLANK_GRAY<<0);
000164  e59f1ddc          LDR      r1,|L1.3912|
000168  e5821008          STR      r1,[r2,#8]
;;;82         	    rLCDCON4=(MVAL<<8)|(WLH_STN<<0);
00016c  e3a01c0d          MOV      r1,#0xd00
000170  e582100c          STR      r1,[r2,#0xc]
;;;83         	    rLCDCON5=0;
000174  e3a01000          MOV      r1,#0
000178  e5821010          STR      r1,[r2,#0x10]
;;;84     
;;;85         	    rLCDSADDR1=(((UINT32T)frameBuffer2Bit>>22)<<21)|M5D((UINT32T)frameBuffer2Bit>>1);
00017c  e59f1dbc          LDR      r1,|L1.3904|
000180  e5911000          LDR      r1,[r1,#0]  ; frameBuffer2Bit
000184  e59f2dac          LDR      r2,|L1.3896|
000188  e00210a1          AND      r1,r2,r1,LSR #1
00018c  e59f2dac          LDR      r2,|L1.3904|
000190  e5922000          LDR      r2,[r2,#0]  ; frameBuffer2Bit
000194  e1a02b22          LSR      r2,r2,#22
000198  e1811a82          ORR      r1,r1,r2,LSL #21
00019c  e3a0244d          MOV      r2,#0x4d000000
0001a0  e5821014          STR      r1,[r2,#0x14]
;;;86         	    rLCDSADDR2=M5D( ((UINT32T)frameBuffer2Bit+(SCR_XSIZE_STN*LCD_YSIZE_STN/4))>>1);
0001a4  e59f1d94          LDR      r1,|L1.3904|
0001a8  e5911000          LDR      r1,[r1,#0]  ; frameBuffer2Bit
0001ac  e2811c96          ADD      r1,r1,#0x9600
0001b0  e59f2d80          LDR      r2,|L1.3896|
0001b4  e00210a1          AND      r1,r2,r1,LSR #1
0001b8  e3a0244d          MOV      r2,#0x4d000000
0001bc  e5821018          STR      r1,[r2,#0x18]
;;;87         	    rLCDSADDR3=(((SCR_XSIZE_STN-LCD_XSIZE_STN)/8)<<11)|(LCD_XSIZE_STN/8);
0001c0  e59f1d84          LDR      r1,|L1.3916|
0001c4  e582101c          STR      r1,[r2,#0x1c]
;;;88     	        rDITHMODE=0x0;
0001c8  e3a01000          MOV      r1,#0
0001cc  e582104c          STR      r1,[r2,#0x4c]
;;;89     	        rBLUELUT =0xf950;                                   // 4-Gray only
0001d0  e59f1d78          LDR      r1,|L1.3920|
0001d4  e5821028          STR      r1,[r2,#0x28]
;;;90           
;;;91                 break;
0001d8  ea00023b          B        |L1.2764|
                  |L1.476|
;;;92         	
;;;93             case MODE_STN_4BIT:
0001dc  e1a00000          MOV      r0,r0
;;;94         	    frameBuffer4Bit=(UINT32T (*)[SCR_XSIZE_STN/8])LCDFRAMEBUFFER;
0001e0  e3a01431          MOV      r1,#0x31000000
0001e4  e59f2d68          LDR      r2,|L1.3924|
0001e8  e5821000          STR      r1,[r2,#0]  ; frameBuffer4Bit
;;;95         	    rLCDCON1=(CLKVAL_STN_GRAY<<8)|(MVAL_USED<<7)|(1<<5)|(2<<1)|0;
0001ec  e59f1d64          LDR      r1,|L1.3928|
0001f0  e3a0244d          MOV      r2,#0x4d000000
0001f4  e5821000          STR      r1,[r2,#0]
;;;96         	    
;;;97         	    // 4-bit single scan,4bpp STN,ENVID=off
;;;98     	        rLCDCON2=(0<<24)|(LINEVAL_STN<<14)|(0<<6)|(0<<0);
0001f8  e3a019ef          MOV      r1,#0x3bc000
0001fc  e5821004          STR      r1,[r2,#4]
;;;99     	        rLCDCON3=(WDLY_STN<<19)|(HOZVAL_STN<<8)|(LINEBLANK_GRAY<<0);
000200  e59f1d40          LDR      r1,|L1.3912|
000204  e5821008          STR      r1,[r2,#8]
;;;100    	        rLCDCON4=(MVAL<<8)|(WLH_STN<<0);
000208  e3a01c0d          MOV      r1,#0xd00
00020c  e582100c          STR      r1,[r2,#0xc]
;;;101    	        rLCDCON5=0;
000210  e3a01000          MOV      r1,#0
000214  e5821010          STR      r1,[r2,#0x10]
;;;102     
;;;103    	        rLCDSADDR1=(((UINT32T)frameBuffer4Bit>>22)<<21)|M5D((UINT32T)frameBuffer4Bit>>1);
000218  e59f1d34          LDR      r1,|L1.3924|
00021c  e5911000          LDR      r1,[r1,#0]  ; frameBuffer4Bit
000220  e59f2d10          LDR      r2,|L1.3896|
000224  e00210a1          AND      r1,r2,r1,LSR #1
000228  e59f2d24          LDR      r2,|L1.3924|
00022c  e5922000          LDR      r2,[r2,#0]  ; frameBuffer4Bit
000230  e1a02b22          LSR      r2,r2,#22
000234  e1811a82          ORR      r1,r1,r2,LSL #21
000238  e3a0244d          MOV      r2,#0x4d000000
00023c  e5821014          STR      r1,[r2,#0x14]
;;;104    	        rLCDSADDR2=M5D( ((UINT32T)frameBuffer4Bit+(SCR_XSIZE_STN*LCD_YSIZE_STN/2))>>1 );
000240  e59f1d0c          LDR      r1,|L1.3924|
000244  e5911000          LDR      r1,[r1,#0]  ; frameBuffer4Bit
000248  e2811b4b          ADD      r1,r1,#0x12c00
00024c  e59f2ce4          LDR      r2,|L1.3896|
000250  e00210a1          AND      r1,r2,r1,LSR #1
000254  e3a0244d          MOV      r2,#0x4d000000
000258  e5821018          STR      r1,[r2,#0x18]
;;;105    	        rLCDSADDR3=(((SCR_XSIZE_STN-LCD_XSIZE_STN)/4)<<11)|(LCD_XSIZE_STN/4);
00025c  e59f1cf8          LDR      r1,|L1.3932|
000260  e582101c          STR      r1,[r2,#0x1c]
;;;106    	        rDITHMODE=0x0;
000264  e3a01000          MOV      r1,#0
000268  e582104c          STR      r1,[r2,#0x4c]
;;;107           
;;;108                break;
00026c  ea000216          B        |L1.2764|
                  |L1.624|
;;;109    
;;;110            case MODE_CSTN_8BIT:
000270  e1a00000          MOV      r0,r0
;;;111        	    frameBuffer8Bit=(UINT32T (*)[SCR_XSIZE_CSTN/4])LCDFRAMEBUFFER;
000274  e3a01431          MOV      r1,#0x31000000
000278  e59f2ce0          LDR      r2,|L1.3936|
00027c  e5821000          STR      r1,[r2,#0]  ; frameBuffer8Bit
;;;112    	        rLCDCON1=(CLKVAL_CSTN<<8)|(MVAL_USED<<7)|(2<<5)|(3<<1)|0;
000280  e59f1cdc          LDR      r1,|L1.3940|
000284  e3a0244d          MOV      r2,#0x4d000000
000288  e5821000          STR      r1,[r2,#0]
;;;113        	    
;;;114        	    // 8-bit single scan,8bpp CSTN,ENVID=off
;;;115    	        rLCDCON2=(0<<24)|(LINEVAL_CSTN<<14)|(0<<6)|(0<<0);
00028c  e3a019ef          MOV      r1,#0x3bc000
000290  e5821004          STR      r1,[r2,#4]
;;;116    	        rLCDCON3=(WDLY_CSTN<<19)|(HOZVAL_CSTN<<8)|(LINEBLANK_CSTN<<0);
000294  e59f1ccc          LDR      r1,|L1.3944|
000298  e5821008          STR      r1,[r2,#8]
;;;117    	        rLCDCON4=(MVAL<<8)|(WLH_CSTN<<0);
00029c  e3a01c0d          MOV      r1,#0xd00
0002a0  e582100c          STR      r1,[r2,#0xc]
;;;118    	        rLCDCON5=0;
0002a4  e3a01000          MOV      r1,#0
0002a8  e5821010          STR      r1,[r2,#0x10]
;;;119    	       
;;;120                rLCDSADDR1=(((UINT32T)frameBuffer8Bit>>22)<<21 )|M5D((UINT32T)frameBuffer8Bit>>1);
0002ac  e59f1cac          LDR      r1,|L1.3936|
0002b0  e5911000          LDR      r1,[r1,#0]  ; frameBuffer8Bit
0002b4  e59f2c7c          LDR      r2,|L1.3896|
0002b8  e00210a1          AND      r1,r2,r1,LSR #1
0002bc  e59f2c9c          LDR      r2,|L1.3936|
0002c0  e5922000          LDR      r2,[r2,#0]  ; frameBuffer8Bit
0002c4  e1a02b22          LSR      r2,r2,#22
0002c8  e1811a82          ORR      r1,r1,r2,LSL #21
0002cc  e3a0244d          MOV      r2,#0x4d000000
0002d0  e5821014          STR      r1,[r2,#0x14]
;;;121    	        rLCDSADDR2=M5D( ((UINT32T)frameBuffer8Bit+(SCR_XSIZE_CSTN*LCD_YSIZE_CSTN/1))>>1 );
0002d4  e59f1c84          LDR      r1,|L1.3936|
0002d8  e5911000          LDR      r1,[r1,#0]  ; frameBuffer8Bit
0002dc  e2811b96          ADD      r1,r1,#0x25800
0002e0  e59f2c50          LDR      r2,|L1.3896|
0002e4  e00210a1          AND      r1,r2,r1,LSR #1
0002e8  e3a0244d          MOV      r2,#0x4d000000
0002ec  e5821018          STR      r1,[r2,#0x18]
;;;122    	        rLCDSADDR3=(((SCR_XSIZE_CSTN-LCD_XSIZE_CSTN)/2)<<11)|(LCD_XSIZE_CSTN/2);
0002f0  e59f1c74          LDR      r1,|L1.3948|
0002f4  e582101c          STR      r1,[r2,#0x1c]
;;;123    	        rDITHMODE=0x0;
0002f8  e3a01000          MOV      r1,#0
0002fc  e582104c          STR      r1,[r2,#0x4c]
;;;124    	        rREDLUT  =0xfdb96420;
000300  e59f1c68          LDR      r1,|L1.3952|
000304  e5821020          STR      r1,[r2,#0x20]
;;;125    	        rGREENLUT=0xfdb96420;
000308  e5821024          STR      r1,[r2,#0x24]
;;;126    	        rBLUELUT =0xfb40;
00030c  e59f1c60          LDR      r1,|L1.3956|
000310  e5821028          STR      r1,[r2,#0x28]
;;;127           
;;;128                break;
000314  ea0001ec          B        |L1.2764|
                  |L1.792|
;;;129    	
;;;130            case MODE_CSTN_12BIT:
000318  e1a00000          MOV      r0,r0
;;;131        	    frameBuffer12Bit=(UINT32T (*)[SCR_XSIZE_CSTN*3/8])LCDFRAMEBUFFER;
00031c  e3a01431          MOV      r1,#0x31000000
000320  e59f2c50          LDR      r2,|L1.3960|
000324  e5821000          STR      r1,[r2,#0]  ; frameBuffer12Bit
;;;132        	    rLCDCON1=(CLKVAL_CSTN<<8)|(MVAL_USED<<7)|(2<<5)|(4<<1)|0;
000328  e59f1c4c          LDR      r1,|L1.3964|
00032c  e3a0244d          MOV      r2,#0x4d000000
000330  e5821000          STR      r1,[r2,#0]
;;;133        	    
;;;134        	    // 8-bit single scan,12bpp CSTN,ENVID=off
;;;135        	    rLCDCON2=(0<<24)|(LINEVAL_CSTN<<14)|(0<<6)|0;
000334  e3a019ef          MOV      r1,#0x3bc000
000338  e5821004          STR      r1,[r2,#4]
;;;136        	    rLCDCON3=(WDLY_CSTN<<19)|(HOZVAL_CSTN<<8)|(LINEBLANK_CSTN<<0);
00033c  e59f1c24          LDR      r1,|L1.3944|
000340  e5821008          STR      r1,[r2,#8]
;;;137        	    rLCDCON4=(MVAL<<8)|(WLH_CSTN<<0);
000344  e3a01c0d          MOV      r1,#0xd00
000348  e582100c          STR      r1,[r2,#0xc]
;;;138        	    rLCDCON5=0;
00034c  e3a01000          MOV      r1,#0
000350  e5821010          STR      r1,[r2,#0x10]
;;;139    
;;;140        	    rLCDSADDR1=(((UINT32T)frameBuffer12Bit>>22)<<21)|M5D((UINT32T)frameBuffer12Bit>>1);
000354  e59f1c1c          LDR      r1,|L1.3960|
000358  e5911000          LDR      r1,[r1,#0]  ; frameBuffer12Bit
00035c  e59f2bd4          LDR      r2,|L1.3896|
000360  e00210a1          AND      r1,r2,r1,LSR #1
000364  e59f2c0c          LDR      r2,|L1.3960|
000368  e5922000          LDR      r2,[r2,#0]  ; frameBuffer12Bit
00036c  e1a02b22          LSR      r2,r2,#22
000370  e1811a82          ORR      r1,r1,r2,LSL #21
000374  e3a0244d          MOV      r2,#0x4d000000
000378  e5821014          STR      r1,[r2,#0x14]
;;;141        	    rLCDSADDR2=M5D(((UINT32T)frameBuffer12Bit+((SCR_XSIZE_CSTN*3/2)*LCD_YSIZE_CSTN))>>1);
00037c  e59f1bf4          LDR      r1,|L1.3960|
000380  e5911000          LDR      r1,[r1,#0]  ; frameBuffer12Bit
000384  e2811be1          ADD      r1,r1,#0x38400
000388  e59f2ba8          LDR      r2,|L1.3896|
00038c  e00210a1          AND      r1,r2,r1,LSR #1
000390  e3a0244d          MOV      r2,#0x4d000000
000394  e5821018          STR      r1,[r2,#0x18]
;;;142        	    rLCDSADDR3=(((SCR_XSIZE_CSTN-LCD_XSIZE_CSTN)*3/4)<<11)|(LCD_XSIZE_CSTN*3/4);
000398  e59f1be0          LDR      r1,|L1.3968|
00039c  e582101c          STR      r1,[r2,#0x1c]
;;;143    	        rDITHMODE=0;
0003a0  e3a01000          MOV      r1,#0
0003a4  e582104c          STR      r1,[r2,#0x4c]
;;;144            
;;;145                break;
0003a8  ea0001c7          B        |L1.2764|
                  |L1.940|
;;;146    
;;;147            case MODE_TFT_8BIT_240320:
0003ac  e1a00000          MOV      r0,r0
;;;148            	frameBuffer8BitTft240320=(UINT32T (*)[SCR_XSIZE_TFT_240320/4])LCDFRAMEBUFFER;
0003b0  e3a01431          MOV      r1,#0x31000000
0003b4  e59f2bc8          LDR      r2,|L1.3972|
0003b8  e5821000          STR      r1,[r2,#0]  ; frameBuffer8BitTft240320
;;;149            	rLCDCON1=(CLKVAL_TFT_240320<<8)|(MVAL_USED<<7)|(3<<5)|(11<<1)|0;
0003bc  e59f1bc4          LDR      r1,|L1.3976|
0003c0  e3a0244d          MOV      r2,#0x4d000000
0003c4  e5821000          STR      r1,[r2,#0]
;;;150                
;;;151                // TFT LCD panel,8bpp TFT,ENVID=off
;;;152            	rLCDCON2=(VBPD_240320<<24)|(LINEVAL_TFT_240320<<14)|(VFPD_240320<<6)|(VSPW_240320);
0003c8  e59f1bbc          LDR      r1,|L1.3980|
0003cc  e5821004          STR      r1,[r2,#4]
;;;153            	rLCDCON3=(HBPD_240320<<19)|(HOZVAL_TFT_240320<<8)|(HFPD_240320);
0003d0  e59f1bb8          LDR      r1,|L1.3984|
0003d4  e5821008          STR      r1,[r2,#8]
;;;154            	rLCDCON4=(MVAL<<8)|(HSPW_240320);
0003d8  e59f1bb4          LDR      r1,|L1.3988|
0003dc  e582100c          STR      r1,[r2,#0xc]
;;;155            	rLCDCON5=(1<<11)|(1<<9)|(1<<8);                     //FRM5:6:5,HSYNC and VSYNC are inverted
0003e0  e3a01c0b          MOV      r1,#0xb00
0003e4  e5821010          STR      r1,[r2,#0x10]
;;;156            	rLCDSADDR1=(((UINT32T)frameBuffer8BitTft240320>>22)<<21)|M5D((UINT32T)frameBuffer8BitTft240320>>1);
0003e8  e59f1b94          LDR      r1,|L1.3972|
0003ec  e5911000          LDR      r1,[r1,#0]  ; frameBuffer8BitTft240320
0003f0  e59f2b40          LDR      r2,|L1.3896|
0003f4  e00210a1          AND      r1,r2,r1,LSR #1
0003f8  e59f2b84          LDR      r2,|L1.3972|
0003fc  e5922000          LDR      r2,[r2,#0]  ; frameBuffer8BitTft240320
000400  e1a02b22          LSR      r2,r2,#22
000404  e1811a82          ORR      r1,r1,r2,LSL #21
000408  e3a0244d          MOV      r2,#0x4d000000
00040c  e5821014          STR      r1,[r2,#0x14]
;;;157            	rLCDSADDR2=M5D( ((UINT32T)frameBuffer8BitTft240320+(SCR_XSIZE_TFT_240320*LCD_YSIZE_TFT_240320/1))>>1 );
000410  e59f1b6c          LDR      r1,|L1.3972|
000414  e5911000          LDR      r1,[r1,#0]  ; frameBuffer8BitTft240320
000418  e2811b96          ADD      r1,r1,#0x25800
00041c  e59f2b14          LDR      r2,|L1.3896|
000420  e00210a1          AND      r1,r2,r1,LSR #1
000424  e3a0244d          MOV      r2,#0x4d000000
000428  e5821018          STR      r1,[r2,#0x18]
;;;158            	rLCDSADDR3=(((SCR_XSIZE_TFT_240320-LCD_XSIZE_TFT_240320)/2)<<11)|(LCD_XSIZE_TFT_240320/2);
00042c  e59f1b64          LDR      r1,|L1.3992|
000430  e582101c          STR      r1,[r2,#0x1c]
;;;159            	rLCDINTMSK|=(3);                                    // MASK LCD Sub Interrupt
000434  e3a0144d          MOV      r1,#0x4d000000
000438  e591105c          LDR      r1,[r1,#0x5c]
00043c  e3811003          ORR      r1,r1,#3
000440  e582105c          STR      r1,[r2,#0x5c]
;;;160            	rLPCSEL&=(~7);                                      // Disable LPC3600
000444  e3a0144d          MOV      r1,#0x4d000000
000448  e5911060          LDR      r1,[r1,#0x60]
00044c  e3c11007          BIC      r1,r1,#7
000450  e5821060          STR      r1,[r2,#0x60]
;;;161            	rTPAL=0;                                            // Disable Temp Palette
000454  e3a01000          MOV      r1,#0
000458  e5821050          STR      r1,[r2,#0x50]
;;;162               
;;;163                break;
00045c  ea00019a          B        |L1.2764|
                  |L1.1120|
;;;164        		
;;;165            case MODE_TFT_16BIT_240320:
000460  e1a00000          MOV      r0,r0
;;;166            	frameBuffer16BitTft240320=(UINT32T (*)[SCR_XSIZE_TFT_240320/2])LCDFRAMEBUFFER;
000464  e3a01431          MOV      r1,#0x31000000
000468  e59f2b2c          LDR      r2,|L1.3996|
00046c  e5821000          STR      r1,[r2,#0]  ; frameBuffer16BitTft240320
;;;167            	rLCDCON1=(CLKVAL_TFT_240320<<8)|(MVAL_USED<<7)|(3<<5)|(12<<1)|0;
000470  e59f1b28          LDR      r1,|L1.4000|
000474  e3a0244d          MOV      r2,#0x4d000000
000478  e5821000          STR      r1,[r2,#0]
;;;168                
;;;169                // TFT LCD panel,12bpp TFT,ENVID=off
;;;170            	rLCDCON2=(VBPD_240320<<24)|(LINEVAL_TFT_240320<<14)|(VFPD_240320<<6)|(VSPW_240320);
00047c  e59f1b08          LDR      r1,|L1.3980|
000480  e5821004          STR      r1,[r2,#4]
;;;171            	rLCDCON3=(HBPD_240320<<19)|(HOZVAL_TFT_240320<<8)|(HFPD_240320);
000484  e59f1b04          LDR      r1,|L1.3984|
000488  e5821008          STR      r1,[r2,#8]
;;;172            	rLCDCON4=(MVAL<<8)|(HSPW_240320);
00048c  e59f1b00          LDR      r1,|L1.3988|
000490  e582100c          STR      r1,[r2,#0xc]
;;;173            	rLCDCON5=(1<<11)|(1<<9)|(1<<8);                     //FRM5:6:5,HSYNC and VSYNC are inverted
000494  e3a01c0b          MOV      r1,#0xb00
000498  e5821010          STR      r1,[r2,#0x10]
;;;174            	rLCDSADDR1=(((UINT32T)frameBuffer16BitTft240320>>22)<<21)|M5D((UINT32T)frameBuffer16BitTft240320>>1);
00049c  e59f1af8          LDR      r1,|L1.3996|
0004a0  e5911000          LDR      r1,[r1,#0]  ; frameBuffer16BitTft240320
0004a4  e59f2a8c          LDR      r2,|L1.3896|
0004a8  e00210a1          AND      r1,r2,r1,LSR #1
0004ac  e59f2ae8          LDR      r2,|L1.3996|
0004b0  e5922000          LDR      r2,[r2,#0]  ; frameBuffer16BitTft240320
0004b4  e1a02b22          LSR      r2,r2,#22
0004b8  e1811a82          ORR      r1,r1,r2,LSL #21
0004bc  e3a0244d          MOV      r2,#0x4d000000
0004c0  e5821014          STR      r1,[r2,#0x14]
;;;175            	rLCDSADDR2=M5D( ((UINT32T)frameBuffer16BitTft240320+(SCR_XSIZE_TFT_240320*LCD_YSIZE_TFT_240320*2))>>1 );
0004c4  e59f1ad0          LDR      r1,|L1.3996|
0004c8  e5911000          LDR      r1,[r1,#0]  ; frameBuffer16BitTft240320
0004cc  e2811a4b          ADD      r1,r1,#0x4b000
0004d0  e59f2a60          LDR      r2,|L1.3896|
0004d4  e00210a1          AND      r1,r2,r1,LSR #1
0004d8  e3a0244d          MOV      r2,#0x4d000000
0004dc  e5821018          STR      r1,[r2,#0x18]
;;;176            	rLCDSADDR3=(((SCR_XSIZE_TFT_240320-LCD_XSIZE_TFT_240320)/1)<<11)|(LCD_XSIZE_TFT_240320/1);
0004e0  e59f1a98          LDR      r1,|L1.3968|
0004e4  e582101c          STR      r1,[r2,#0x1c]
;;;177            	rLCDINTMSK|=(3);                                    // MASK LCD Sub Interrupt
0004e8  e3a0144d          MOV      r1,#0x4d000000
0004ec  e591105c          LDR      r1,[r1,#0x5c]
0004f0  e3811003          ORR      r1,r1,#3
0004f4  e582105c          STR      r1,[r2,#0x5c]
;;;178            	rLPCSEL&=(~7);                                      // Disable LPC3600
0004f8  e3a0144d          MOV      r1,#0x4d000000
0004fc  e5911060          LDR      r1,[r1,#0x60]
000500  e3c11007          BIC      r1,r1,#7
000504  e5821060          STR      r1,[r2,#0x60]
;;;179            	rTPAL=0;                                            // Disable Temp Palette
000508  e3a01000          MOV      r1,#0
00050c  e5821050          STR      r1,[r2,#0x50]
;;;180                
;;;181                break;
000510  ea00016d          B        |L1.2764|
                  |L1.1300|
;;;182    
;;;183            case MODE_TFT_1BIT_640480:
000514  e1a00000          MOV      r0,r0
;;;184            	frameBuffer1BitTft640480=(UINT32T (*)[SCR_XSIZE_TFT_640480/32])LCDFRAMEBUFFER;
000518  e3a01431          MOV      r1,#0x31000000
00051c  e59f2a80          LDR      r2,|L1.4004|
000520  e5821000          STR      r1,[r2,#0]  ; frameBuffer1BitTft640480
;;;185            	rLCDCON1=(CLKVAL_TFT_640480<<8)|(MVAL_USED<<7)|(3<<5)|(8<<1)|0;
000524  e3a01e17          MOV      r1,#0x170
000528  e3a0244d          MOV      r2,#0x4d000000
00052c  e5821000          STR      r1,[r2,#0]
;;;186            	rLCDCON2=(VBPD_640480<<24)|(LINEVAL_TFT_640480<<14)|(VFPD_640480<<6)|(VSPW_640480);
000530  e59f1a70          LDR      r1,|L1.4008|
000534  e5821004          STR      r1,[r2,#4]
;;;187            	rLCDCON3=(HBPD_640480<<19)|(HOZVAL_TFT_640480<<8)|(HFPD_640480);
000538  e59f1a6c          LDR      r1,|L1.4012|
00053c  e5821008          STR      r1,[r2,#8]
;;;188            	rLCDCON4=(MVAL<<8)|(HSPW_640480);
000540  e59f1a68          LDR      r1,|L1.4016|
000544  e582100c          STR      r1,[r2,#0xc]
;;;189            	rLCDCON5=(1<<11)|(1<<9)|(1<<8);                     //FRM5:6:5,HSYNC and VSYNC are inverted
000548  e3a01c0b          MOV      r1,#0xb00
00054c  e5821010          STR      r1,[r2,#0x10]
;;;190            	rLCDSADDR1=(((UINT32T)frameBuffer1BitTft640480>>22)<<21)|M5D((UINT32T)frameBuffer1BitTft640480>>1);
000550  e59f1a4c          LDR      r1,|L1.4004|
000554  e5911000          LDR      r1,[r1,#0]  ; frameBuffer1BitTft640480
000558  e59f29d8          LDR      r2,|L1.3896|
00055c  e00210a1          AND      r1,r2,r1,LSR #1
000560  e59f2a3c          LDR      r2,|L1.4004|
000564  e5922000          LDR      r2,[r2,#0]  ; frameBuffer1BitTft640480
000568  e1a02b22          LSR      r2,r2,#22
00056c  e1811a82          ORR      r1,r1,r2,LSL #21
000570  e3a0244d          MOV      r2,#0x4d000000
000574  e5821014          STR      r1,[r2,#0x14]
;;;191            	rLCDSADDR2=M5D( ((UINT32T)frameBuffer1BitTft640480+(SCR_XSIZE_TFT_640480*LCD_YSIZE_TFT_640480/8))>>1 );
000578  e59f1a24          LDR      r1,|L1.4004|
00057c  e5911000          LDR      r1,[r1,#0]  ; frameBuffer1BitTft640480
000580  e2811b4b          ADD      r1,r1,#0x12c00
000584  e59f29ac          LDR      r2,|L1.3896|
000588  e00210a1          AND      r1,r2,r1,LSR #1
00058c  e3a0244d          MOV      r2,#0x4d000000
000590  e5821018          STR      r1,[r2,#0x18]
;;;192            	rLCDSADDR3=(((SCR_XSIZE_TFT_640480-LCD_XSIZE_TFT_640480)/16)<<11)|(LCD_XSIZE_TFT_640480/16);
000594  e59f19b0          LDR      r1,|L1.3916|
000598  e582101c          STR      r1,[r2,#0x1c]
;;;193            	rLCDINTMSK|=(3);                                    // MASK LCD Sub Interrupt
00059c  e3a0144d          MOV      r1,#0x4d000000
0005a0  e591105c          LDR      r1,[r1,#0x5c]
0005a4  e3811003          ORR      r1,r1,#3
0005a8  e582105c          STR      r1,[r2,#0x5c]
;;;194            	rLPCSEL&=(~7);                                      // Disable LPC3600
0005ac  e3a0144d          MOV      r1,#0x4d000000
0005b0  e5911060          LDR      r1,[r1,#0x60]
0005b4  e3c11007          BIC      r1,r1,#7
0005b8  e5821060          STR      r1,[r2,#0x60]
;;;195            	rTPAL=0;                                            // Disable Temp Palette
0005bc  e3a01000          MOV      r1,#0
0005c0  e5821050          STR      r1,[r2,#0x50]
;;;196           
;;;197                break;
0005c4  ea000140          B        |L1.2764|
                  |L1.1480|
;;;198        
;;;199            case MODE_TFT_8BIT_640480:
0005c8  e1a00000          MOV      r0,r0
;;;200            	frameBuffer8BitTft640480=(UINT32T (*)[SCR_XSIZE_TFT_640480/4])LCDFRAMEBUFFER;
0005cc  e3a01431          MOV      r1,#0x31000000
0005d0  e59f29dc          LDR      r2,|L1.4020|
0005d4  e5821000          STR      r1,[r2,#0]  ; frameBuffer8BitTft640480
;;;201            	rLCDCON1=(CLKVAL_TFT_640480<<8)|(MVAL_USED<<7)|(3<<5)|(11<<1)|0;
0005d8  e59f19d8          LDR      r1,|L1.4024|
0005dc  e3a0244d          MOV      r2,#0x4d000000
0005e0  e5821000          STR      r1,[r2,#0]
;;;202               	
;;;203               	// TFT LCD panel,8bpp TFT,ENVID=off
;;;204            	rLCDCON2=(VBPD_640480<<24)|(LINEVAL_TFT_640480<<14)|(VFPD_640480<<6)|(VSPW_640480);
0005e4  e59f19bc          LDR      r1,|L1.4008|
0005e8  e5821004          STR      r1,[r2,#4]
;;;205            	rLCDCON3=(HBPD_640480<<19)|(HOZVAL_TFT_640480<<8)|(HFPD_640480);
0005ec  e59f19b8          LDR      r1,|L1.4012|
0005f0  e5821008          STR      r1,[r2,#8]
;;;206            	rLCDCON4=(MVAL<<8)|(HSPW_640480);
0005f4  e59f19b4          LDR      r1,|L1.4016|
0005f8  e582100c          STR      r1,[r2,#0xc]
;;;207            	rLCDCON5=(1<<11)|(1<<9)|(1<<8);                     //FRM5:6:5,HSYNC and VSYNC are inverted
0005fc  e3a01c0b          MOV      r1,#0xb00
000600  e5821010          STR      r1,[r2,#0x10]
;;;208            	rLCDSADDR1=(((UINT32T)frameBuffer8BitTft640480>>22)<<21)|M5D((UINT32T)frameBuffer8BitTft640480>>1);
000604  e59f19a8          LDR      r1,|L1.4020|
000608  e5911000          LDR      r1,[r1,#0]  ; frameBuffer8BitTft640480
00060c  e59f2924          LDR      r2,|L1.3896|
000610  e00210a1          AND      r1,r2,r1,LSR #1
000614  e59f2998          LDR      r2,|L1.4020|
000618  e5922000          LDR      r2,[r2,#0]  ; frameBuffer8BitTft640480
00061c  e1a02b22          LSR      r2,r2,#22
000620  e1811a82          ORR      r1,r1,r2,LSL #21
000624  e3a0244d          MOV      r2,#0x4d000000
000628  e5821014          STR      r1,[r2,#0x14]
;;;209            	rLCDSADDR2=M5D( ((UINT32T)frameBuffer8BitTft640480+(SCR_XSIZE_TFT_640480*LCD_YSIZE_TFT_640480/1))>>1 );
00062c  e59f1980          LDR      r1,|L1.4020|
000630  e5911000          LDR      r1,[r1,#0]  ; frameBuffer8BitTft640480
000634  e2811a96          ADD      r1,r1,#0x96000
000638  e59f28f8          LDR      r2,|L1.3896|
00063c  e00210a1          AND      r1,r2,r1,LSR #1
000640  e3a0244d          MOV      r2,#0x4d000000
000644  e5821018          STR      r1,[r2,#0x18]
;;;210            	rLCDSADDR3=(((SCR_XSIZE_TFT_640480-LCD_XSIZE_TFT_640480)/2)<<11)|(LCD_XSIZE_TFT_640480/2);
000648  e59f196c          LDR      r1,|L1.4028|
00064c  e582101c          STR      r1,[r2,#0x1c]
;;;211            	rLCDINTMSK|=(3);                                    // MASK LCD Sub Interrupt
000650  e3a0144d          MOV      r1,#0x4d000000
000654  e591105c          LDR      r1,[r1,#0x5c]
000658  e3811003          ORR      r1,r1,#3
00065c  e582105c          STR      r1,[r2,#0x5c]
;;;212            	rLPCSEL&=(~7);                                      // Disable LPC3600
000660  e3a0144d          MOV      r1,#0x4d000000
000664  e5911060          LDR      r1,[r1,#0x60]
000668  e3c11007          BIC      r1,r1,#7
00066c  e5821060          STR      r1,[r2,#0x60]
;;;213            	rTPAL=0;                                            // Disable Temp Palette
000670  e3a01000          MOV      r1,#0
000674  e5821050          STR      r1,[r2,#0x50]
;;;214           
;;;215                break;
000678  ea000113          B        |L1.2764|
                  |L1.1660|
;;;216            	
;;;217            case MODE_TFT_16BIT_640480:
00067c  e1a00000          MOV      r0,r0
;;;218                frameBuffer16BitTft640480=(UINT32T (*)[SCR_XSIZE_TFT_640480/2])LCDFRAMEBUFFER;
000680  e3a01431          MOV      r1,#0x31000000
000684  e59f2934          LDR      r2,|L1.4032|
000688  e5821000          STR      r1,[r2,#0]  ; frameBuffer16BitTft640480
;;;219            	rLCDCON1=(CLKVAL_TFT_640480<<8)|(MVAL_USED<<7)|(3<<5)|(12<<1)|0;
00068c  e3a01f5e          MOV      r1,#0x178
000690  e3a0244d          MOV      r2,#0x4d000000
000694  e5821000          STR      r1,[r2,#0]
;;;220                
;;;221                // TFT LCD panel,16bpp TFT,ENVID=off
;;;222            	rLCDCON2=(VBPD_640480<<24)|(LINEVAL_TFT_640480<<14)|(VFPD_640480<<6)|(VSPW_640480);
000698  e59f1908          LDR      r1,|L1.4008|
00069c  e5821004          STR      r1,[r2,#4]
;;;223            	rLCDCON3=(HBPD_640480<<19)|(HOZVAL_TFT_640480<<8)|(HFPD_640480);
0006a0  e59f1904          LDR      r1,|L1.4012|
0006a4  e5821008          STR      r1,[r2,#8]
;;;224            	rLCDCON4=(MVAL<<8)|(HSPW_640480);
0006a8  e59f1900          LDR      r1,|L1.4016|
0006ac  e582100c          STR      r1,[r2,#0xc]
;;;225            	rLCDCON5=(1<<11)|(1<<9)|(1<<8);                 	//FRM5:6:5,HSYNC and VSYNC are inverted
0006b0  e3a01c0b          MOV      r1,#0xb00
0006b4  e5821010          STR      r1,[r2,#0x10]
;;;226            	rLCDSADDR1=(((UINT32T)frameBuffer16BitTft640480>>22)<<21)|M5D((UINT32T)frameBuffer16BitTft640480>>1);
0006b8  e59f1900          LDR      r1,|L1.4032|
0006bc  e5911000          LDR      r1,[r1,#0]  ; frameBuffer16BitTft640480
0006c0  e59f2870          LDR      r2,|L1.3896|
0006c4  e00210a1          AND      r1,r2,r1,LSR #1
0006c8  e59f28f0          LDR      r2,|L1.4032|
0006cc  e5922000          LDR      r2,[r2,#0]  ; frameBuffer16BitTft640480
0006d0  e1a02b22          LSR      r2,r2,#22
0006d4  e1811a82          ORR      r1,r1,r2,LSL #21
0006d8  e3a0244d          MOV      r2,#0x4d000000
0006dc  e5821014          STR      r1,[r2,#0x14]
;;;227            	rLCDSADDR2=M5D( ((UINT32T)frameBuffer16BitTft640480+(SCR_XSIZE_TFT_640480*LCD_YSIZE_TFT_640480*2))>>1 );
0006e0  e59f18d8          LDR      r1,|L1.4032|
0006e4  e5911000          LDR      r1,[r1,#0]  ; frameBuffer16BitTft640480
0006e8  e281194b          ADD      r1,r1,#0x12c000
0006ec  e59f2844          LDR      r2,|L1.3896|
0006f0  e00210a1          AND      r1,r2,r1,LSR #1
0006f4  e3a0244d          MOV      r2,#0x4d000000
0006f8  e5821018          STR      r1,[r2,#0x18]
;;;228            	rLCDSADDR3=(((SCR_XSIZE_TFT_640480-LCD_XSIZE_TFT_640480)/1)<<11)|(LCD_XSIZE_TFT_640480/1);
0006fc  e59f18c0          LDR      r1,|L1.4036|
000700  e582101c          STR      r1,[r2,#0x1c]
;;;229            	rLCDINTMSK|=(3);                                    // MASK LCD Sub Interrupt
000704  e3a0144d          MOV      r1,#0x4d000000
000708  e591105c          LDR      r1,[r1,#0x5c]
00070c  e3811003          ORR      r1,r1,#3
000710  e582105c          STR      r1,[r2,#0x5c]
;;;230            	rLPCSEL&=(~7);                                      // Disable LPC3600
000714  e3a0144d          MOV      r1,#0x4d000000
000718  e5911060          LDR      r1,[r1,#0x60]
00071c  e3c11007          BIC      r1,r1,#7
000720  e5821060          STR      r1,[r2,#0x60]
;;;231            	rTPAL=0;                                            // Disable Temp Palette
000724  e3a01000          MOV      r1,#0
000728  e5821050          STR      r1,[r2,#0x50]
;;;232           
;;;233                break;
00072c  ea0000e6          B        |L1.2764|
                  |L1.1840|
;;;234            
;;;235            case MODE_TFT_16BIT_800480:
000730  e1a00000          MOV      r0,r0
;;;236                frameBuffer16BitTft800480=(UINT32T (*)[SCR_XSIZE_TFT_800480/2])LCDFRAMEBUFFER;
000734  e3a01431          MOV      r1,#0x31000000
000738  e59f2888          LDR      r2,|L1.4040|
00073c  e5821000          STR      r1,[r2,#0]  ; frameBuffer16BitTft800480
;;;237            	rLCDCON1=(CLKVAL_TFT_800480<<8)|(MVAL_USED<<7)|(3<<5)|(12<<1)|0;
000740  e3a01078          MOV      r1,#0x78
000744  e3a0244d          MOV      r2,#0x4d000000
000748  e5821000          STR      r1,[r2,#0]
;;;238                
;;;239                // TFT LCD panel,16bpp TFT,ENVID=off
;;;240            	rLCDCON2=(VBPD_800480<<24)|(LINEVAL_TFT_800480<<14)|(VFPD_800480<<6)|(VSPW_800480);
00074c  e59f1878          LDR      r1,|L1.4044|
000750  e5821004          STR      r1,[r2,#4]
;;;241            	rLCDCON3=(HBPD_800480<<19)|(HOZVAL_TFT_800480<<8)|(HFPD_800480);
000754  e59f1874          LDR      r1,|L1.4048|
000758  e5821008          STR      r1,[r2,#8]
;;;242            	rLCDCON4=(MVAL<<8)|(HSPW_800480);
00075c  e59f1870          LDR      r1,|L1.4052|
000760  e582100c          STR      r1,[r2,#0xc]
;;;243            	rLCDCON5=(1<<11)|(1<<9)|(1<<8);                 	//FRM5:6:5,HSYNC and VSYNC are inverted
000764  e3a01c0b          MOV      r1,#0xb00
000768  e5821010          STR      r1,[r2,#0x10]
;;;244            	rLCDSADDR1=(((UINT32T)frameBuffer16BitTft800480>>22)<<21)|M5D((UINT32T)frameBuffer16BitTft800480>>1);
00076c  e59f1854          LDR      r1,|L1.4040|
000770  e5911000          LDR      r1,[r1,#0]  ; frameBuffer16BitTft800480
000774  e59f27bc          LDR      r2,|L1.3896|
000778  e00210a1          AND      r1,r2,r1,LSR #1
00077c  e59f2844          LDR      r2,|L1.4040|
000780  e5922000          LDR      r2,[r2,#0]  ; frameBuffer16BitTft800480
000784  e1a02b22          LSR      r2,r2,#22
000788  e1811a82          ORR      r1,r1,r2,LSL #21
00078c  e3a0244d          MOV      r2,#0x4d000000
000790  e5821014          STR      r1,[r2,#0x14]
;;;245            	rLCDSADDR2=M5D( ((UINT32T)frameBuffer16BitTft800480+(SCR_XSIZE_TFT_800480*LCD_YSIZE_TFT_800480*2))>>1 );
000794  e59f182c          LDR      r1,|L1.4040|
000798  e5911000          LDR      r1,[r1,#0]  ; frameBuffer16BitTft800480
00079c  e2811601          ADD      r1,r1,#0x100000
0007a0  e2811a77          ADD      r1,r1,#0x77000
0007a4  e59f278c          LDR      r2,|L1.3896|
0007a8  e00210a1          AND      r1,r2,r1,LSR #1
0007ac  e3a0244d          MOV      r2,#0x4d000000
0007b0  e5821018          STR      r1,[r2,#0x18]
;;;246            	rLCDSADDR3=(((SCR_XSIZE_TFT_800480-LCD_XSIZE_TFT_800480)/1)<<11)|(LCD_XSIZE_TFT_800480/1);
0007b4  e59f181c          LDR      r1,|L1.4056|
0007b8  e582101c          STR      r1,[r2,#0x1c]
;;;247            	rLCDINTMSK|=(3);                                    // MASK LCD Sub Interrupt
0007bc  e3a0144d          MOV      r1,#0x4d000000
0007c0  e591105c          LDR      r1,[r1,#0x5c]
0007c4  e3811003          ORR      r1,r1,#3
0007c8  e582105c          STR      r1,[r2,#0x5c]
;;;248            	rLPCSEL&=(~7);                                      // Disable LPC3600
0007cc  e3a0144d          MOV      r1,#0x4d000000
0007d0  e5911060          LDR      r1,[r1,#0x60]
0007d4  e3c11007          BIC      r1,r1,#7
0007d8  e5821060          STR      r1,[r2,#0x60]
;;;249            	rTPAL=0;                                            // Disable Temp Palette
0007dc  e3a01000          MOV      r1,#0
0007e0  e5821050          STR      r1,[r2,#0x50]
;;;250           
;;;251                break;
0007e4  ea0000b8          B        |L1.2764|
                  |L1.2024|
;;;252    
;;;253            case MODE_TFT_24BIT_640480:
0007e8  e1a00000          MOV      r0,r0
;;;254                frameBuffer24BitTft640480=(UINT32T (*)[SCR_XSIZE_TFT_640480])LCDFRAMEBUFFER;
0007ec  e3a01431          MOV      r1,#0x31000000
0007f0  e59f27e4          LDR      r2,|L1.4060|
0007f4  e5821000          STR      r1,[r2,#0]  ; frameBuffer24BitTft640480
;;;255                rLCDCON1=(CLKVAL_TFT_640480<<8)|(MVAL_USED<<7)|(3<<5)|(13<<1)|0;
0007f8  e59f17e0          LDR      r1,|L1.4064|
0007fc  e3a0244d          MOV      r2,#0x4d000000
000800  e5821000          STR      r1,[r2,#0]
;;;256                    
;;;257                // TFT LCD panel,24bpp TFT,ENVID=off
;;;258                rLCDCON2=(VBPD_640480<<24)|(LINEVAL_TFT_640480<<14)|(VFPD_640480<<6)|(VSPW_640480);
000804  e59f179c          LDR      r1,|L1.4008|
000808  e5821004          STR      r1,[r2,#4]
;;;259                rLCDCON3=(HBPD_640480<<19)|(HOZVAL_TFT_640480<<8)|(HFPD_640480);
00080c  e59f1798          LDR      r1,|L1.4012|
000810  e5821008          STR      r1,[r2,#8]
;;;260                rLCDCON4=(MVAL<<8)|(HSPW_640480);
000814  e59f1794          LDR      r1,|L1.4016|
000818  e582100c          STR      r1,[r2,#0xc]
;;;261                rLCDCON5=(1<<12)|(1<<9)|(1<<8);                     // BPP24:MSB,HSYNC and VSYNC are inverted
00081c  e3a01c13          MOV      r1,#0x1300
000820  e5821010          STR      r1,[r2,#0x10]
;;;262                rLCDSADDR1=(((UINT32T)frameBuffer24BitTft640480>>22)<<21)|M5D((UINT32T)frameBuffer24BitTft640480>>1);
000824  e59f17b0          LDR      r1,|L1.4060|
000828  e5911000          LDR      r1,[r1,#0]  ; frameBuffer24BitTft640480
00082c  e59f2704          LDR      r2,|L1.3896|
000830  e00210a1          AND      r1,r2,r1,LSR #1
000834  e59f27a0          LDR      r2,|L1.4060|
000838  e5922000          LDR      r2,[r2,#0]  ; frameBuffer24BitTft640480
00083c  e1a02b22          LSR      r2,r2,#22
000840  e1811a82          ORR      r1,r1,r2,LSL #21
000844  e3a0244d          MOV      r2,#0x4d000000
000848  e5821014          STR      r1,[r2,#0x14]
;;;263                rLCDSADDR2=M5D( ((UINT32T)frameBuffer24BitTft640480+(SCR_XSIZE_TFT_640480*LCD_YSIZE_TFT_640480*4))>>1 );
00084c  e59f1788          LDR      r1,|L1.4060|
000850  e5911000          LDR      r1,[r1,#0]  ; frameBuffer24BitTft640480
000854  e2811996          ADD      r1,r1,#0x258000
000858  e59f26d8          LDR      r2,|L1.3896|
00085c  e00210a1          AND      r1,r2,r1,LSR #1
000860  e3a0244d          MOV      r2,#0x4d000000
000864  e5821018          STR      r1,[r2,#0x18]
;;;264                rLCDSADDR3=(((SCR_XSIZE_TFT_640480-LCD_XSIZE_TFT_640480)*2)<<11)|(LCD_XSIZE_TFT_640480*2);
000868  e59f1774          LDR      r1,|L1.4068|
00086c  e582101c          STR      r1,[r2,#0x1c]
;;;265                rLCDINTMSK|=(3);                                    // MASK LCD Sub Interrupt
000870  e3a0144d          MOV      r1,#0x4d000000
000874  e591105c          LDR      r1,[r1,#0x5c]
000878  e3811003          ORR      r1,r1,#3
00087c  e582105c          STR      r1,[r2,#0x5c]
;;;266                rLPCSEL&=(~7);                                      // Disable LPC3600
000880  e3a0144d          MOV      r1,#0x4d000000
000884  e5911060          LDR      r1,[r1,#0x60]
000888  e3c11007          BIC      r1,r1,#7
00088c  e5821060          STR      r1,[r2,#0x60]
;;;267                rTPAL=0;                                            // Disable Temp Palette
000890  e3a01000          MOV      r1,#0
000894  e5821050          STR      r1,[r2,#0x50]
;;;268                
;;;269                break;
000898  ea00008b          B        |L1.2764|
                  |L1.2204|
;;;270            
;;;271            case MODE_TFT_1BIT_800600:
00089c  e1a00000          MOV      r0,r0
;;;272            	frameBuffer1BitTft800600=(UINT32T (*)[SCR_XSIZE_TFT_800600/32])LCDFRAMEBUFFER;
0008a0  e3a01431          MOV      r1,#0x31000000
0008a4  e59f273c          LDR      r2,|L1.4072|
0008a8  e5821000          STR      r1,[r2,#0]  ; frameBuffer1BitTft800600
;;;273               	rLCDCON1=(CLKVAL_TFT_800600<<8)|(MVAL_USED<<7)|(3<<5)|(8<<1)|0;
0008ac  e3a01070          MOV      r1,#0x70
0008b0  e3a0244d          MOV      r2,#0x4d000000
0008b4  e5821000          STR      r1,[r2,#0]
;;;274    
;;;275                // TFT LCD panel,1bpp TFT,ENVID=off
;;;276            	rLCDCON2=(VBPD_800600<<24)|(LINEVAL_TFT_800600<<14)|(VFPD_800600<<6)|(VSPW_800600);
0008b8  e59f172c          LDR      r1,|L1.4076|
0008bc  e5821004          STR      r1,[r2,#4]
;;;277            	rLCDCON3=(HBPD_800600<<19)|(HOZVAL_TFT_800600<<8)|(HFPD_800600);
0008c0  e59f1728          LDR      r1,|L1.4080|
0008c4  e5821008          STR      r1,[r2,#8]
;;;278            	rLCDCON4=(MVAL<<8)|(HSPW_800600);
0008c8  e59f1724          LDR      r1,|L1.4084|
0008cc  e582100c          STR      r1,[r2,#0xc]
;;;279            	rLCDCON5=(1<<9)|(1<<8);	
0008d0  e3a01c03          MOV      r1,#0x300
0008d4  e5821010          STR      r1,[r2,#0x10]
;;;280    
;;;281            	rLCDSADDR1=(((UINT32T)frameBuffer1BitTft800600>>22)<<21)|M5D((UINT32T)frameBuffer1BitTft800600>>1);
0008d8  e59f1708          LDR      r1,|L1.4072|
0008dc  e5911000          LDR      r1,[r1,#0]  ; frameBuffer1BitTft800600
0008e0  e59f2650          LDR      r2,|L1.3896|
0008e4  e00210a1          AND      r1,r2,r1,LSR #1
0008e8  e59f26f8          LDR      r2,|L1.4072|
0008ec  e5922000          LDR      r2,[r2,#0]  ; frameBuffer1BitTft800600
0008f0  e1a02b22          LSR      r2,r2,#22
0008f4  e1811a82          ORR      r1,r1,r2,LSL #21
0008f8  e3a0244d          MOV      r2,#0x4d000000
0008fc  e5821014          STR      r1,[r2,#0x14]
;;;282            	rLCDSADDR2=M5D( ((UINT32T)frameBuffer1BitTft800600+(SCR_XSIZE_TFT_800600*LCD_YSIZE_TFT_800600/8))>>1 );
000900  e59f16e0          LDR      r1,|L1.4072|
000904  e5911000          LDR      r1,[r1,#0]  ; frameBuffer1BitTft800600
000908  e2811907          ADD      r1,r1,#0x1c000
00090c  e2811d53          ADD      r1,r1,#0x14c0
000910  e59f2620          LDR      r2,|L1.3896|
000914  e00210a1          AND      r1,r2,r1,LSR #1
000918  e3a0244d          MOV      r2,#0x4d000000
00091c  e5821018          STR      r1,[r2,#0x18]
;;;283            	rLCDSADDR3=(((SCR_XSIZE_TFT_800600-LCD_XSIZE_TFT_800600)/16)<<11)|(LCD_XSIZE_TFT_800600/16);
000920  e59f16d0          LDR      r1,|L1.4088|
000924  e582101c          STR      r1,[r2,#0x1c]
;;;284            	rLCDINTMSK|=(3);                                    // MASK LCD Sub Interrupt
000928  e3a0144d          MOV      r1,#0x4d000000
00092c  e591105c          LDR      r1,[r1,#0x5c]
000930  e3811003          ORR      r1,r1,#3
000934  e582105c          STR      r1,[r2,#0x5c]
;;;285            	rLPCSEL&=(~7);                                      // Disable LPC3600
000938  e3a0144d          MOV      r1,#0x4d000000
00093c  e5911060          LDR      r1,[r1,#0x60]
000940  e3c11007          BIC      r1,r1,#7
000944  e5821060          STR      r1,[r2,#0x60]
;;;286            	rTPAL=0;                                            // Disable Temp Palette
000948  e3a01000          MOV      r1,#0
00094c  e5821050          STR      r1,[r2,#0x50]
;;;287            
;;;288                break;
000950  ea00005d          B        |L1.2764|
                  |L1.2388|
;;;289        
;;;290            case MODE_TFT_8BIT_800600:
000954  e1a00000          MOV      r0,r0
;;;291            	frameBuffer8BitTft800600=(UINT32T (*)[SCR_XSIZE_TFT_800600/4])LCDFRAMEBUFFER;
000958  e3a01431          MOV      r1,#0x31000000
00095c  e59f2698          LDR      r2,|L1.4092|
000960  e5821000          STR      r1,[r2,#0]  ; frameBuffer8BitTft800600
;;;292               	rLCDCON1=(CLKVAL_TFT_800600<<8)|(MVAL_USED<<7)|(3<<5)|(11<<1)|0;
000964  e3a01076          MOV      r1,#0x76
000968  e3a0244d          MOV      r2,#0x4d000000
00096c  e5821000          STR      r1,[r2,#0]
;;;293                
;;;294                // TFT LCD panel,8bpp TFT,ENVID=off
;;;295            	rLCDCON2=(VBPD_800600<<24)|(LINEVAL_TFT_800600<<14)|(VFPD_800600<<6)|(VSPW_800600);
000970  e59f1674          LDR      r1,|L1.4076|
000974  e5821004          STR      r1,[r2,#4]
;;;296            	rLCDCON3=(HBPD_800600<<19)|(HOZVAL_TFT_800600<<8)|(HFPD_800600);
000978  e59f1670          LDR      r1,|L1.4080|
00097c  e5821008          STR      r1,[r2,#8]
;;;297            	rLCDCON4=(MVAL<<8)|(HSPW_800600);
000980  e59f166c          LDR      r1,|L1.4084|
000984  e582100c          STR      r1,[r2,#0xc]
;;;298            	rLCDCON5=(1<<9)|(1<<8);	
000988  e3a01c03          MOV      r1,#0x300
00098c  e5821010          STR      r1,[r2,#0x10]
;;;299    
;;;300            	rLCDSADDR1=(((UINT32T)frameBuffer8BitTft800600>>22)<<21)|M5D((UINT32T)frameBuffer8BitTft800600>>1);
000990  e59f1664          LDR      r1,|L1.4092|
000994  e5911000          LDR      r1,[r1,#0]  ; frameBuffer8BitTft800600
000998  e59f2598          LDR      r2,|L1.3896|
00099c  e00210a1          AND      r1,r2,r1,LSR #1
0009a0  e59f2654          LDR      r2,|L1.4092|
0009a4  e5922000          LDR      r2,[r2,#0]  ; frameBuffer8BitTft800600
0009a8  e1a02b22          LSR      r2,r2,#22
0009ac  e1811a82          ORR      r1,r1,r2,LSL #21
0009b0  e3a0244d          MOV      r2,#0x4d000000
0009b4  e5821014          STR      r1,[r2,#0x14]
;;;301            	rLCDSADDR2=M5D( ((UINT32T)frameBuffer8BitTft800600+(SCR_XSIZE_TFT_800600*LCD_YSIZE_TFT_800600/1))>>1 );
0009b8  e59f163c          LDR      r1,|L1.4092|
0009bc  e5911000          LDR      r1,[r1,#0]  ; frameBuffer8BitTft800600
0009c0  e281180e          ADD      r1,r1,#0xe0000
0009c4  e2811ca6          ADD      r1,r1,#0xa600
0009c8  e59f2568          LDR      r2,|L1.3896|
0009cc  e00210a1          AND      r1,r2,r1,LSR #1
0009d0  e3a0244d          MOV      r2,#0x4d000000
0009d4  e5821018          STR      r1,[r2,#0x18]
;;;302            	rLCDSADDR3=(((SCR_XSIZE_TFT_800600-LCD_XSIZE_TFT_800600)/2)<<11)|(LCD_XSIZE_TFT_800600/2);
0009d8  e59f1620          LDR      r1,|L1.4096|
0009dc  e582101c          STR      r1,[r2,#0x1c]
;;;303            	rLCDINTMSK|=(3);                                    // MASK LCD Sub Interrupt
0009e0  e3a0144d          MOV      r1,#0x4d000000
0009e4  e591105c          LDR      r1,[r1,#0x5c]
0009e8  e3811003          ORR      r1,r1,#3
0009ec  e582105c          STR      r1,[r2,#0x5c]
;;;304            	rLPCSEL&=(~7);                                      // Disable LPC3600
0009f0  e3a0144d          MOV      r1,#0x4d000000
0009f4  e5911060          LDR      r1,[r1,#0x60]
0009f8  e3c11007          BIC      r1,r1,#7
0009fc  e5821060          STR      r1,[r2,#0x60]
;;;305            	rTPAL=0;                                            // Disable Temp Palette
000a00  e3a01000          MOV      r1,#0
000a04  e5821050          STR      r1,[r2,#0x50]
;;;306           
;;;307                break;
000a08  ea00002f          B        |L1.2764|
                  |L1.2572|
;;;308            	
;;;309            case MODE_TFT_16BIT_800600:
000a0c  e1a00000          MOV      r0,r0
;;;310            	frameBuffer16BitTft800600=(UINT32T (*)[SCR_XSIZE_TFT_800600/2])LCDFRAMEBUFFER;
000a10  e3a01431          MOV      r1,#0x31000000
000a14  e59f25e8          LDR      r2,|L1.4100|
000a18  e5821000          STR      r1,[r2,#0]  ; frameBuffer16BitTft800600
;;;311               	rLCDCON1=(CLKVAL_TFT_800600<<8)|(MVAL_USED<<7)|(3<<5)|(12<<1)|0;
000a1c  e3a01078          MOV      r1,#0x78
000a20  e3a0244d          MOV      r2,#0x4d000000
000a24  e5821000          STR      r1,[r2,#0]
;;;312                
;;;313                // TFT LCD panel,16bpp TFT,ENVID=off
;;;314            	rLCDCON2=(VBPD_800600<<24)|(LINEVAL_TFT_800600<<14)|(VFPD_800600<<6)|(VSPW_800600);
000a28  e59f15bc          LDR      r1,|L1.4076|
000a2c  e5821004          STR      r1,[r2,#4]
;;;315            	rLCDCON3=(HBPD_800600<<19)|(HOZVAL_TFT_800600<<8)|(HFPD_800600);
000a30  e59f15b8          LDR      r1,|L1.4080|
000a34  e5821008          STR      r1,[r2,#8]
;;;316            	rLCDCON4=(MVAL<<8)|(HSPW_800600);
000a38  e59f15b4          LDR      r1,|L1.4084|
000a3c  e582100c          STR      r1,[r2,#0xc]
;;;317            	rLCDCON5=(1<<11)|(1<<10)|(1<<9)|(1<<8);
000a40  e3a01c0f          MOV      r1,#0xf00
000a44  e5821010          STR      r1,[r2,#0x10]
;;;318            	
;;;319            	rLCDSADDR1=(((UINT32T)frameBuffer16BitTft800600>>22)<<21)|M5D((UINT32T)frameBuffer16BitTft800600>>1);
000a48  e59f15b4          LDR      r1,|L1.4100|
000a4c  e5911000          LDR      r1,[r1,#0]  ; frameBuffer16BitTft800600
000a50  e59f24e0          LDR      r2,|L1.3896|
000a54  e00210a1          AND      r1,r2,r1,LSR #1
000a58  e59f25a4          LDR      r2,|L1.4100|
000a5c  e5922000          LDR      r2,[r2,#0]  ; frameBuffer16BitTft800600
000a60  e1a02b22          LSR      r2,r2,#22
000a64  e1811a82          ORR      r1,r1,r2,LSL #21
000a68  e3a0244d          MOV      r2,#0x4d000000
000a6c  e5821014          STR      r1,[r2,#0x14]
;;;320            	rLCDSADDR2=M5D( ((UINT32T)frameBuffer16BitTft800600+(SCR_XSIZE_TFT_800600*LCD_YSIZE_TFT_800600*2))>>1 );
000a70  e59f158c          LDR      r1,|L1.4100|
000a74  e5911000          LDR      r1,[r1,#0]  ; frameBuffer16BitTft800600
000a78  e2811707          ADD      r1,r1,#0x1c0000
000a7c  e2811b53          ADD      r1,r1,#0x14c00
000a80  e59f24b0          LDR      r2,|L1.3896|
000a84  e00210a1          AND      r1,r2,r1,LSR #1
000a88  e3a0244d          MOV      r2,#0x4d000000
000a8c  e5821018          STR      r1,[r2,#0x18]
;;;321            	rLCDSADDR3=(((SCR_XSIZE_TFT_800600-LCD_XSIZE_TFT_800600)/1)<<11)|(LCD_XSIZE_TFT_800600/1);
000a90  e59f1540          LDR      r1,|L1.4056|
000a94  e582101c          STR      r1,[r2,#0x1c]
;;;322            	rLCDINTMSK|=(3);                                    // MASK LCD Sub Interrupt
000a98  e3a0144d          MOV      r1,#0x4d000000
000a9c  e591105c          LDR      r1,[r1,#0x5c]
000aa0  e3811003          ORR      r1,r1,#3
000aa4  e582105c          STR      r1,[r2,#0x5c]
;;;323            	rLPCSEL&=(~7);                                      // Disable LPC3600
000aa8  e3a0144d          MOV      r1,#0x4d000000
000aac  e5911060          LDR      r1,[r1,#0x60]
000ab0  e3c11007          BIC      r1,r1,#7
000ab4  e5821060          STR      r1,[r2,#0x60]
;;;324            	rTPAL=0;                                            // Disable Temp Palette
000ab8  e3a01000          MOV      r1,#0
000abc  e5821050          STR      r1,[r2,#0x50]
;;;325            
;;;326                break;
000ac0  ea000001          B        |L1.2764|
                  |L1.2756|
;;;327        
;;;328            default:
000ac4  e1a00000          MOV      r0,r0
;;;329                break;
000ac8  e1a00000          MOV      r0,r0
                  |L1.2764|
000acc  e1a00000          MOV      r0,r0                 ;73
;;;330       }	
;;;331    }
000ad0  e12fff1e          BX       lr
;;;332    
                          ENDP

                  Lcd_CstnOnOff PROC
;;;340    *********************************************************************************************/
;;;341    void Lcd_CstnOnOff(int onoff)
000ad4  e3500001          CMP      r0,#1
;;;342    {
;;;343        // 1:CSTN Panel on  0:CSTN Panel off //	
;;;344        if(onoff==1)
000ad8  1a000005          BNE      |L1.2804|
;;;345        	rLCDCON1|=1;                                            // ENVID=ON
000adc  e3a0144d          MOV      r1,#0x4d000000
000ae0  e5911000          LDR      r1,[r1,#0]
000ae4  e3811001          ORR      r1,r1,#1
000ae8  e3a0244d          MOV      r2,#0x4d000000
000aec  e5821000          STR      r1,[r2,#0]
000af0  ea000005          B        |L1.2828|
                  |L1.2804|
;;;346        else
;;;347        	rLCDCON1 =rLCDCON1 & 0x3fffe;                           // ENVID Off
000af4  e3a0144d          MOV      r1,#0x4d000000
000af8  e5911000          LDR      r1,[r1,#0]
000afc  e3c1137f          BIC      r1,r1,#0xfc000001
000b00  e3c117ff          BIC      r1,r1,#0x3fc0000
000b04  e3a0244d          MOV      r2,#0x4d000000
000b08  e5821000          STR      r1,[r2,#0]
                  |L1.2828|
;;;348            rGPBUP=rGPBUP|(1<<5);                                   // Pull-up disable
000b0c  e3a01456          MOV      r1,#0x56000000
000b10  e5911018          LDR      r1,[r1,#0x18]
000b14  e3811020          ORR      r1,r1,#0x20
000b18  e3a02456          MOV      r2,#0x56000000
000b1c  e5821018          STR      r1,[r2,#0x18]
;;;349            rGPBDAT=rGPBDAT&(~(1<<5))|(onoff<<5);                   // GPB5=On or Off
000b20  e3a01456          MOV      r1,#0x56000000
000b24  e5911014          LDR      r1,[r1,#0x14]
000b28  e3c11020          BIC      r1,r1,#0x20
000b2c  e1811280          ORR      r1,r1,r0,LSL #5
000b30  e5821014          STR      r1,[r2,#0x14]
;;;350            rGPBCON=rGPBCON&(~(3<<10))|(1<<10);                     // GPD9=output
000b34  e3a01456          MOV      r1,#0x56000000
000b38  e5911010          LDR      r1,[r1,#0x10]
000b3c  e3c11b03          BIC      r1,r1,#0xc00
000b40  e3811b01          ORR      r1,r1,#0x400
000b44  e5821010          STR      r1,[r2,#0x10]
;;;351    }    
000b48  e12fff1e          BX       lr
;;;352    
                          ENDP

                  Lcd_EnvidOnOff PROC
;;;361    *********************************************************************************************/
;;;362    void Lcd_EnvidOnOff(int onoff)
000b4c  e3500001          CMP      r0,#1
;;;363    {
;;;364        if(onoff==1)
000b50  1a000005          BNE      |L1.2924|
;;;365        	rLCDCON1|=0x00000001;                                            // ENVID=ON		
000b54  e3a0144d          MOV      r1,#0x4d000000
000b58  e5911000          LDR      r1,[r1,#0]
000b5c  e3811001          ORR      r1,r1,#1
000b60  e3a0244d          MOV      r2,#0x4d000000
000b64  e5821000          STR      r1,[r2,#0]
000b68  ea000005          B        |L1.2948|
                  |L1.2924|
;;;366    	else
;;;367        	rLCDCON1 =rLCDCON1 & 0x3fffe;                           // ENVID Off
000b6c  e3a0144d          MOV      r1,#0x4d000000
000b70  e5911000          LDR      r1,[r1,#0]
000b74  e3c1137f          BIC      r1,r1,#0xfc000001
000b78  e3c117ff          BIC      r1,r1,#0x3fc0000
000b7c  e3a0244d          MOV      r2,#0x4d000000
000b80  e5821000          STR      r1,[r2,#0]
                  |L1.2948|
;;;368    }    
000b84  e12fff1e          BX       lr
;;;369    
                          ENDP

                  Lcd_Lpc3600Enable PROC
;;;378    *********************************************************************************************/
;;;379    void Lcd_Lpc3600Enable(void)
000b88  e3a0044d          MOV      r0,#0x4d000000
;;;380    {
;;;381        rLPCSEL&=~(7);
000b8c  e5900060          LDR      r0,[r0,#0x60]
000b90  e3c00007          BIC      r0,r0,#7
000b94  e3a0144d          MOV      r1,#0x4d000000
000b98  e5810060          STR      r0,[r1,#0x60]
;;;382        rLPCSEL|=(7);                                               // 240320,Enable LPC3600
000b9c  e3a0044d          MOV      r0,#0x4d000000
000ba0  e5900060          LDR      r0,[r0,#0x60]
000ba4  e3800007          ORR      r0,r0,#7
000ba8  e5810060          STR      r0,[r1,#0x60]
;;;383    }    
000bac  e12fff1e          BX       lr
;;;384    
                          ENDP

                  Lcd_PowerEnable PROC
;;;393    *********************************************************************************************/
;;;394    void Lcd_PowerEnable(int invpwren,int pwren)
000bb0  e3a02456          MOV      r2,#0x56000000
;;;395    {
;;;396        //GPG4 is setted as LCD_PWREN
;;;397        rGPGUP=rGPGUP&(~(1<<4))|(1<<4);                             // Pull-up disable
000bb4  e5922068          LDR      r2,[r2,#0x68]
000bb8  e3822010          ORR      r2,r2,#0x10
000bbc  e3a03456          MOV      r3,#0x56000000
000bc0  e5832068          STR      r2,[r3,#0x68]
;;;398        rGPGCON=rGPGCON&(~(3<<8))|(3<<8);                           // GPG4=LCD_PWREN
000bc4  e3a02456          MOV      r2,#0x56000000
000bc8  e5922060          LDR      r2,[r2,#0x60]
000bcc  e3822c03          ORR      r2,r2,#0x300
000bd0  e5832060          STR      r2,[r3,#0x60]
;;;399        
;;;400        //Enable LCD POWER ENABLE Function
;;;401        rLCDCON5=rLCDCON5&(~(1<<3))|(pwren<<3);                     // PWREN
000bd4  e3a0244d          MOV      r2,#0x4d000000
000bd8  e5922010          LDR      r2,[r2,#0x10]
000bdc  e3c22008          BIC      r2,r2,#8
000be0  e1822181          ORR      r2,r2,r1,LSL #3
000be4  e3a0344d          MOV      r3,#0x4d000000
000be8  e5832010          STR      r2,[r3,#0x10]
;;;402        rLCDCON5=rLCDCON5&(~(1<<5))|(invpwren<<5);                  // INVPWREN
000bec  e3a0244d          MOV      r2,#0x4d000000
000bf0  e5922010          LDR      r2,[r2,#0x10]
000bf4  e3c22020          BIC      r2,r2,#0x20
000bf8  e1822280          ORR      r2,r2,r0,LSL #5
000bfc  e5832010          STR      r2,[r3,#0x10]
;;;403    }    
000c00  e12fff1e          BX       lr
;;;404    
                          ENDP

                  Lcd_MoveViewPort PROC
;;;506    
;;;507    void Lcd_MoveViewPort(int vx,int vy,int type)
000c04  e92d0030          PUSH     {r4,r5}
;;;508    {
000c08  e1a03000          MOV      r3,r0
;;;509        UINT32T addr;
;;;510        switch(type)
000c0c  e59f43f4          LDR      r4,|L1.4104|
000c10  e042c004          SUB      r12,r2,r4
000c14  e1520004          CMP      r2,r4
000c18  0a000114          BEQ      |L1.4208|
000c1c  ca000014          BGT      |L1.3188|
000c20  e59f43e4          LDR      r4,|L1.4108|
000c24  e042c004          SUB      r12,r2,r4
000c28  e1520004          CMP      r2,r4
000c2c  0a000072          BEQ      |L1.3580|
000c30  ca000007          BGT      |L1.3156|
000c34  e3e0ca01          MVN      r12,#0x1000
000c38  e09cc002          ADDS     r12,r12,r2
000c3c  0a000020          BEQ      |L1.3268|
000c40  e35c0001          CMP      r12,#1
000c44  0a000039          BEQ      |L1.3376|
000c48  e35c0003          CMP      r12,#3
000c4c  1a0001ca          BNE      |L1.4988|
000c50  ea000050          B        |L1.3480|
                  |L1.3156|
000c54  e35c0001          CMP      r12,#1
000c58  0a00007e          BEQ      |L1.3672|
000c5c  e35c0c21          CMP      r12,#0x2100
000c60  0a000095          BEQ      |L1.3772|
000c64  e3e04c21          MVN      r4,#0x2100
000c68  e09cc004          ADDS     r12,r12,r4
000c6c  1a0001c2          BNE      |L1.4988|
000c70  ea0000e7          B        |L1.4116|
                  |L1.3188|
000c74  e59f5394          LDR      r5,|L1.4112|
000c78  e04c4005          SUB      r4,r12,r5
000c7c  e15c0005          CMP      r12,r5
000c80  0a000170          BEQ      |L1.4680|
000c84  ca000006          BGT      |L1.3236|
000c88  e35c00fd          CMP      r12,#0xfd
000c8c  0a00010e          BEQ      |L1.4300|
000c90  e35c00fe          CMP      r12,#0xfe
000c94  0a000126          BEQ      |L1.4404|
000c98  e35c0c01          CMP      r12,#0x100
000c9c  1a0001b6          BNE      |L1.4988|
000ca0  ea00013a          B        |L1.4496|
                  |L1.3236|
000ca4  e3540001          CMP      r4,#1
000ca8  0a000181          BEQ      |L1.4788|
000cac  e3540003          CMP      r4,#3
000cb0  0a000198          BEQ      |L1.4888|
000cb4  e244cbf7          SUB      r12,r4,#0x3dc00
000cb8  e25cc015          SUBS     r12,r12,#0x15
000cbc  1a0001ae          BNE      |L1.4988|
000cc0  ea000149          B        |L1.4588|
                  |L1.3268|
;;;511        {
;;;512            case MODE_STN_1BIT:
000cc4  e1a00000          MOV      r0,r0
;;;513            	// LCDBASEU,LCDBASEL register has to be changed before 12 words before the end of VLINE.
;;;514            	// In mono mode, x=320 is 10 words, So, We can't change LCDBASEU,LCDBASEL 
;;;515            	// during LINECNT=1~0 at mono mode. 
;;;516                // The processor mode should be superviser mode.  
;;;517            //	SET_IF();
;;;518            	#if (LCD_XSIZE_STN<512)
;;;519            	    while((rLCDCON1>>18)<=1);                       // if x<512
000cc8  e1a00000          MOV      r0,r0
                  |L1.3276|
000ccc  e3a0c44d          MOV      r12,#0x4d000000
000cd0  e59cc000          LDR      r12,[r12,#0]
000cd4  e3a04001          MOV      r4,#1
000cd8  e154092c          CMP      r4,r12,LSR #18
000cdc  2afffffa          BCS      |L1.3276|
;;;520               	#else	
;;;521            	    while((rLCDCON1>>18)==0);                       // if x>512 ((12+4)*32) 
;;;522            	#endif
;;;523            	addr=(UINT32T)frameBuffer1Bit+(vx/8)+vy*(SCR_XSIZE_STN/8);
000ce0  e1a0c003          MOV      r12,r3
000ce4  e1a04fc3          ASR      r4,r3,#31
000ce8  e0834ea4          ADD      r4,r3,r4,LSR #29
000cec  e59f5238          LDR      r5,|L1.3884|
000cf0  e5955000          LDR      r5,[r5,#0]  ; frameBuffer1Bit
000cf4  e08541c4          ADD      r4,r5,r4,ASR #3
000cf8  e0815101          ADD      r5,r1,r1,LSL #2
000cfc  e0840205          ADD      r0,r4,r5,LSL #4
;;;524            	rLCDSADDR1= ( (addr>>22)<<21 ) | M5D(addr>>1);
000d00  e59fc230          LDR      r12,|L1.3896|
000d04  e00cc0a0          AND      r12,r12,r0,LSR #1
000d08  e1a04b20          LSR      r4,r0,#22
000d0c  e18cca84          ORR      r12,r12,r4,LSL #21
000d10  e3a0444d          MOV      r4,#0x4d000000
000d14  e584c014          STR      r12,[r4,#0x14]
;;;525            	rLCDSADDR2= M5D( ((addr+(SCR_XSIZE_STN*LCD_YSIZE_STN/8))>>1) );
000d18  e280cc4b          ADD      r12,r0,#0x4b00
000d1c  e59f4214          LDR      r4,|L1.3896|
000d20  e004c0ac          AND      r12,r4,r12,LSR #1
000d24  e3a0444d          MOV      r4,#0x4d000000
000d28  e584c018          STR      r12,[r4,#0x18]
;;;526            //	CLR_IF();
;;;527               	break;
000d2c  ea000194          B        |L1.4996|
                  |L1.3376|
;;;528    
;;;529            case MODE_STN_2BIT:
000d30  e1a00000          MOV      r0,r0
;;;530            //	SET_IF(); 
;;;531            	#if (LCD_XSIZE_STN<256)
;;;532               	    while((rLCDCON1>>18)<=1);                       // if x<256
;;;533            	#else	
;;;534                    while((rLCDCON1>>18)==0);                       // if x>256
000d34  e1a00000          MOV      r0,r0
                  |L1.3384|
000d38  e3a0c44d          MOV      r12,#0x4d000000
000d3c  e59cc000          LDR      r12,[r12,#0]
000d40  e1b0c92c          LSRS     r12,r12,#18
000d44  0afffffb          BEQ      |L1.3384|
;;;535            	#endif
;;;536                addr=(UINT32T)frameBuffer2Bit+(vx/4)+vy*(SCR_XSIZE_STN/4);
000d48  e1a0c003          MOV      r12,r3
000d4c  e1a04fc3          ASR      r4,r3,#31
000d50  e0834f24          ADD      r4,r3,r4,LSR #30
000d54  e59f51e4          LDR      r5,|L1.3904|
000d58  e5955000          LDR      r5,[r5,#0]  ; frameBuffer2Bit
000d5c  e0854144          ADD      r4,r5,r4,ASR #2
000d60  e0815101          ADD      r5,r1,r1,LSL #2
000d64  e0840285          ADD      r0,r4,r5,LSL #5
;;;537            	rLCDSADDR1= ( (addr>>22)<<21 ) | M5D(addr>>1);
000d68  e59fc1c8          LDR      r12,|L1.3896|
000d6c  e00cc0a0          AND      r12,r12,r0,LSR #1
000d70  e1a04b20          LSR      r4,r0,#22
000d74  e18cca84          ORR      r12,r12,r4,LSL #21
000d78  e3a0444d          MOV      r4,#0x4d000000
000d7c  e584c014          STR      r12,[r4,#0x14]
;;;538            	rLCDSADDR2= M5D(((addr+(SCR_XSIZE_STN*LCD_YSIZE_STN/4))>>1));
000d80  e280cc96          ADD      r12,r0,#0x9600
000d84  e59f41ac          LDR      r4,|L1.3896|
000d88  e004c0ac          AND      r12,r4,r12,LSR #1
000d8c  e3a0444d          MOV      r4,#0x4d000000
000d90  e584c018          STR      r12,[r4,#0x18]
;;;539            //	CLR_IF();
;;;540                break;
000d94  ea00017a          B        |L1.4996|
                  |L1.3480|
;;;541    
;;;542            case MODE_STN_4BIT:
000d98  e1a00000          MOV      r0,r0
;;;543            //	SET_IF(); 
;;;544            	#if (LCD_XSIZE_STN<128)
;;;545            	    while((rLCDCON1>>18)<=1);                       // if x<128
;;;546            	#else	
;;;547            	    while((rLCDCON1>>18)==0);                       // if x>128
000d9c  e1a00000          MOV      r0,r0
                  |L1.3488|
000da0  e3a0c44d          MOV      r12,#0x4d000000
000da4  e59cc000          LDR      r12,[r12,#0]
000da8  e1b0c92c          LSRS     r12,r12,#18
000dac  0afffffb          BEQ      |L1.3488|
;;;548            	#endif
;;;549                addr=(UINT32T)frameBuffer4Bit+(vx/2)+vy*(SCR_XSIZE_STN/2);
000db0  e1a0c003          MOV      r12,r3
000db4  e0834fac          ADD      r4,r3,r12,LSR #31
000db8  e59f5194          LDR      r5,|L1.3924|
000dbc  e5955000          LDR      r5,[r5,#0]  ; frameBuffer4Bit
000dc0  e08540c4          ADD      r4,r5,r4,ASR #1
000dc4  e0815101          ADD      r5,r1,r1,LSL #2
000dc8  e0840305          ADD      r0,r4,r5,LSL #6
;;;550            	rLCDSADDR1= ( (addr>>22)<<21 ) | M5D(addr>>1);
000dcc  e59fc164          LDR      r12,|L1.3896|
000dd0  e00cc0a0          AND      r12,r12,r0,LSR #1
000dd4  e1a04b20          LSR      r4,r0,#22
000dd8  e18cca84          ORR      r12,r12,r4,LSL #21
000ddc  e3a0444d          MOV      r4,#0x4d000000
000de0  e584c014          STR      r12,[r4,#0x14]
;;;551            	rLCDSADDR2= M5D(((addr+(SCR_XSIZE_STN*LCD_YSIZE_STN/2))>>1));
000de4  e280cb4b          ADD      r12,r0,#0x12c00
000de8  e59f4148          LDR      r4,|L1.3896|
000dec  e004c0ac          AND      r12,r4,r12,LSR #1
000df0  e3a0444d          MOV      r4,#0x4d000000
000df4  e584c018          STR      r12,[r4,#0x18]
;;;552            //	CLR_IF();
;;;553                break;
000df8  ea000161          B        |L1.4996|
                  |L1.3580|
;;;554    
;;;555            case MODE_CSTN_8BIT:
000dfc  e1a00000          MOV      r0,r0
;;;556            //	SET_IF(); 
;;;557            	#if (LCD_XSIZE_CSTN<64)
;;;558            	    while((rLCDCON1>>18)<=1);                       // if x<64
;;;559            	#else	
;;;560             	    while((rLCDCON1>>18)==0);                       // if x>64
000e00  e1a00000          MOV      r0,r0
                  |L1.3588|
000e04  e3a0c44d          MOV      r12,#0x4d000000
000e08  e59cc000          LDR      r12,[r12,#0]
000e0c  e1b0c92c          LSRS     r12,r12,#18
000e10  0afffffb          BEQ      |L1.3588|
;;;561            	#endif
;;;562                addr=(UINT32T)frameBuffer8Bit+(vx/1)+vy*(SCR_XSIZE_CSTN/1);
000e14  e59fc144          LDR      r12,|L1.3936|
000e18  e59cc000          LDR      r12,[r12,#0]  ; frameBuffer8Bit
000e1c  e08cc003          ADD      r12,r12,r3
000e20  e0814101          ADD      r4,r1,r1,LSL #2
000e24  e08c0384          ADD      r0,r12,r4,LSL #7
;;;563            	rLCDSADDR1= ( (addr>>22)<<21 ) | M5D(addr>>1);
000e28  e59fc108          LDR      r12,|L1.3896|
000e2c  e00cc0a0          AND      r12,r12,r0,LSR #1
000e30  e1a04b20          LSR      r4,r0,#22
000e34  e18cca84          ORR      r12,r12,r4,LSL #21
000e38  e3a0444d          MOV      r4,#0x4d000000
000e3c  e584c014          STR      r12,[r4,#0x14]
;;;564            	rLCDSADDR2= M5D(((addr+(SCR_XSIZE_CSTN*LCD_YSIZE_CSTN))>>1));
000e40  e280cb96          ADD      r12,r0,#0x25800
000e44  e59f40ec          LDR      r4,|L1.3896|
000e48  e004c0ac          AND      r12,r4,r12,LSR #1
000e4c  e3a0444d          MOV      r4,#0x4d000000
000e50  e584c018          STR      r12,[r4,#0x18]
;;;565            //	CLR_IF();
;;;566                break;
000e54  ea00014a          B        |L1.4996|
                  |L1.3672|
;;;567    
;;;568            case MODE_CSTN_12BIT:
000e58  e1a00000          MOV      r0,r0
;;;569            //	SET_IF(); 
;;;570            	#if (LCD_XSIZE_CSTN<43)
;;;571            	    while((rLCDCON1>>18)<=1);                       // if x<43
;;;572            	#else	
;;;573            	    while((rLCDCON1>>18)==0);                       // if x>43
000e5c  e1a00000          MOV      r0,r0
                  |L1.3680|
000e60  e3a0c44d          MOV      r12,#0x4d000000
000e64  e59cc000          LDR      r12,[r12,#0]
000e68  e1b0c92c          LSRS     r12,r12,#18
000e6c  0afffffb          BEQ      |L1.3680|
;;;574            	#endif
;;;575            	
;;;576            	// Move 6Byte(4pixel)
;;;577            	addr=(UINT32T)frameBuffer12Bit+(vx*3/2)+vy*(SCR_XSIZE_CSTN*3/2); 
000e70  e083c083          ADD      r12,r3,r3,LSL #1
000e74  e08c4fac          ADD      r4,r12,r12,LSR #31
000e78  e59f50f8          LDR      r5,|L1.3960|
000e7c  e5955000          LDR      r5,[r5,#0]  ; frameBuffer12Bit
000e80  e08540c4          ADD      r4,r5,r4,ASR #1
000e84  e0615201          RSB      r5,r1,r1,LSL #4
000e88  e0840305          ADD      r0,r4,r5,LSL #6
;;;578            	
;;;579            	rLCDSADDR1= ( (addr>>22)<<21 ) | M5D(addr>>1);
000e8c  e59fc0a4          LDR      r12,|L1.3896|
000e90  e00cc0a0          AND      r12,r12,r0,LSR #1
000e94  e1a04b20          LSR      r4,r0,#22
000e98  e18cca84          ORR      r12,r12,r4,LSL #21
000e9c  e3a0444d          MOV      r4,#0x4d000000
000ea0  e584c014          STR      r12,[r4,#0x14]
;;;580            	rLCDSADDR2= M5D(((addr+(SCR_XSIZE_CSTN*LCD_YSIZE_CSTN*3/2))>>1));
000ea4  e280cbe1          ADD      r12,r0,#0x38400
000ea8  e59f4088          LDR      r4,|L1.3896|
000eac  e004c0ac          AND      r12,r4,r12,LSR #1
000eb0  e3a0444d          MOV      r4,#0x4d000000
000eb4  e584c018          STR      r12,[r4,#0x18]
;;;581            //	CLR_IF();
;;;582                break;
000eb8  ea000131          B        |L1.4996|
                  |L1.3772|
;;;583        	
;;;584            case MODE_TFT_1BIT_240320:
000ebc  e1a00000          MOV      r0,r0
;;;585            //	SET_IF(); 
;;;586            	#if (LCD_XSIZE_TFT_240320<512)
;;;587            	    while((rLCDCON1>>18)<=1);                       // if x<512
000ec0  e1a00000          MOV      r0,r0
                  |L1.3780|
000ec4  e3a0c44d          MOV      r12,#0x4d000000
000ec8  e59cc000          LDR      r12,[r12,#0]
000ecc  e3a04001          MOV      r4,#1
000ed0  e154092c          CMP      r4,r12,LSR #18
000ed4  2afffffa          BCS      |L1.3780|
;;;588            	#else	
;;;589        	    while((rLCDCON1>>18)==0);                           // if x>512
;;;590            	#endif
;;;591                addr=(UINT32T)frameBuffer8BitTft240320+(vx/8)+vy*(SCR_XSIZE_TFT_240320/8);
000ed8  e1a0c003          MOV      r12,r3
000edc  e1a04fc3          ASR      r4,r3,#31
000ee0  e0834ea4          ADD      r4,r3,r4,LSR #29
000ee4  e59f5098          LDR      r5,|L1.3972|
000ee8  e5955000          LDR      r5,[r5,#0]  ; frameBuffer8BitTft240320
000eec  e08541c4          ADD      r4,r5,r4,ASR #3
000ef0  e0615201          RSB      r5,r1,r1,LSL #4
000ef4  e0840105          ADD      r0,r4,r5,LSL #2
;;;592            	rLCDSADDR1= ( (addr>>22)<<21 ) | M5D(addr>>1);
000ef8  e59fc038          LDR      r12,|L1.3896|
000efc  e00cc0a0          AND      r12,r12,r0,LSR #1
000f00  e1a04b20          LSR      r4,r0,#22
000f04  e18cca84          ORR      r12,r12,r4,LSL #21
000f08  e3a0444d          MOV      r4,#0x4d000000
000f0c  e584c014          STR      r12,[r4,#0x14]
;;;593            	rLCDSADDR2= M5D(((addr+(SCR_XSIZE_TFT_240320*LCD_YSIZE_TFT_240320/8))>>1));
000f10  e280cc4b          ADD      r12,r0,#0x4b00
000f14  e59f401c          LDR      r4,|L1.3896|
000f18  e004c0ac          AND      r12,r4,r12,LSR #1
000f1c  e3a0444d          MOV      r4,#0x4d000000
000f20  e584c018          STR      r12,[r4,#0x18]
;;;594            //	CLR_IF();
;;;595                break;
000f24  ea000116          B        |L1.4996|
                  |L1.3880|
                          DCD      0x00004201
                  |L1.3884|
                          DCD      frameBuffer1Bit
                  |L1.3888|
                          DCD      0x00001420
                  |L1.3892|
                          DCD      0x00004f01
                  |L1.3896|
                          DCD      0x001fffff
                  |L1.3900|
                          DCD      0x0000a014
                  |L1.3904|
                          DCD      frameBuffer2Bit
                  |L1.3908|
                          DCD      0x00000a22
                  |L1.3912|
                          DCD      0x00004f0d
                  |L1.3916|
                          DCD      0x00014028
                  |L1.3920|
                          DCD      0x0000f950
                  |L1.3924|
                          DCD      frameBuffer4Bit
                  |L1.3928|
                          DCD      0x00000a24
                  |L1.3932|
                          DCD      0x00028050
                  |L1.3936|
                          DCD      frameBuffer8Bit
                  |L1.3940|
                          DCD      0x00000646
                  |L1.3944|
                          DCD      0x00007710
                  |L1.3948|
                          DCD      0x000500a0
                  |L1.3952|
                          DCD      0xfdb96420
                  |L1.3956|
                          DCD      0x0000fb40
                  |L1.3960|
                          DCD      frameBuffer12Bit
                  |L1.3964|
                          DCD      0x00000648
                  |L1.3968|
                          DCD      0x000780f0
                  |L1.3972|
                          DCD      frameBuffer8BitTft240320
                  |L1.3976|
                          DCD      0x00000476
                  |L1.3980|
                          DCD      0x014fc081
                  |L1.3984|
                          DCD      0x0030ef02
                  |L1.3988|
                          DCD      0x00000d03
                  |L1.3992|
                          DCD      0x0003c078
                  |L1.3996|
                          DCD      frameBuffer16BitTft240320
                  |L1.4000|
                          DCD      0x00000478
                  |L1.4004|
                          DCD      frameBuffer1BitTft640480
                  |L1.4008|
                          DCD      0x2077c241
                  |L1.4012|
                          DCD      0x017a7f0f
                  |L1.4016|
                          DCD      0x00000d5f
                  |L1.4020|
                          DCD      frameBuffer8BitTft640480
                  |L1.4024|
                          DCD      0x00000176
                  |L1.4028|
                          DCD      0x000a0140
                  |L1.4032|
                          DCD      frameBuffer16BitTft640480
                  |L1.4036|
                          DCD      0x00140280
                  |L1.4040|
                          DCD      frameBuffer16BitTft800480
                  |L1.4044|
                          DCD      0x0f77c3de
                  |L1.4048|
                          DCD      0x00f31f46
                  |L1.4052|
                          DCD      0x00000d64
                  |L1.4056|
                          DCD      0x00190320
                  |L1.4060|
                          DCD      frameBuffer24BitTft640480
                  |L1.4064|
                          DCD      0x0000017a
                  |L1.4068|
                          DCD      0x00280500
                  |L1.4072|
                          DCD      frameBuffer1BitTft800600
                  |L1.4076|
                          DCD      0x0195c080
                  |L1.4080|
                          DCD      0x00eb1f1d
                  |L1.4084|
                          DCD      0x00000d0b
                  |L1.4088|
                          DCD      0x00019032
                  |L1.4092|
                          DCD      frameBuffer8BitTft800600
                  |L1.4096|
                          DCD      0x000c8190
                  |L1.4100|
                          DCD      frameBuffer16BitTft800600
                  |L1.4104|
                          DCD      0x00004104
                  |L1.4108|
                          DCD      0x00002001
                  |L1.4112|
                          DCD      0x000002fd
                  |L1.4116|
;;;596    
;;;597            case MODE_TFT_8BIT_240320:
001014  e1a00000          MOV      r0,r0
;;;598            //	SET_IF(); 
;;;599            	#if (LCD_XSIZE_TFT_240320<64)
;;;600            	    while((rLCDCON1>>18)<=1);                       // if x<64
;;;601            	#else	
;;;602            	    while((rLCDCON1>>18)==0);                       // if x>64
001018  e1a00000          MOV      r0,r0
                  |L1.4124|
00101c  e3a0c44d          MOV      r12,#0x4d000000
001020  e59cc000          LDR      r12,[r12,#0]
001024  e1b0c92c          LSRS     r12,r12,#18
001028  0afffffb          BEQ      |L1.4124|
;;;603            	#endif
;;;604                addr=(UINT32T)frameBuffer8BitTft240320+(vx/1)+vy*(SCR_XSIZE_TFT_240320/1);
00102c  e51fc0b0          LDR      r12,|L1.3972|
001030  e59cc000          LDR      r12,[r12,#0]  ; frameBuffer8BitTft240320
001034  e08cc003          ADD      r12,r12,r3
001038  e0614201          RSB      r4,r1,r1,LSL #4
00103c  e08c0284          ADD      r0,r12,r4,LSL #5
;;;605            	rLCDSADDR1= ( (addr>>22)<<21 ) | M5D(addr>>1);
001040  e51fc110          LDR      r12,|L1.3896|
001044  e00cc0a0          AND      r12,r12,r0,LSR #1
001048  e1a04b20          LSR      r4,r0,#22
00104c  e18cca84          ORR      r12,r12,r4,LSL #21
001050  e3a0444d          MOV      r4,#0x4d000000
001054  e584c014          STR      r12,[r4,#0x14]
;;;606            	rLCDSADDR2= M5D(((addr+(SCR_XSIZE_TFT_240320*LCD_YSIZE_TFT_240320))>>1));
001058  e280cb96          ADD      r12,r0,#0x25800
00105c  e51f412c          LDR      r4,|L1.3896|
001060  e004c0ac          AND      r12,r4,r12,LSR #1
001064  e3a0444d          MOV      r4,#0x4d000000
001068  e584c018          STR      r12,[r4,#0x18]
;;;607            //	CLR_IF();
;;;608                break;
00106c  ea0000c4          B        |L1.4996|
                  |L1.4208|
;;;609    
;;;610            case MODE_TFT_16BIT_240320:
001070  e1a00000          MOV      r0,r0
;;;611            //	SET_IF(); 
;;;612            	#if (LCD_XSIZE_TFT_240320<32)
;;;613            	    while((rLCDCON1>>18)<=1);                       // if x<32
;;;614            	#else	
;;;615            	    while((rLCDCON1>>18)==0);                       // if x>32
001074  e1a00000          MOV      r0,r0
                  |L1.4216|
001078  e3a0c44d          MOV      r12,#0x4d000000
00107c  e59cc000          LDR      r12,[r12,#0]
001080  e1b0c92c          LSRS     r12,r12,#18
001084  0afffffb          BEQ      |L1.4216|
;;;616            	#endif
;;;617                addr=(UINT32T)frameBuffer16BitTft240320+(vx*2)+vy*(SCR_XSIZE_TFT_240320*2);
001088  e51fc0f4          LDR      r12,|L1.3996|
00108c  e59cc000          LDR      r12,[r12,#0]  ; frameBuffer16BitTft240320
001090  e08cc083          ADD      r12,r12,r3,LSL #1
001094  e0614201          RSB      r4,r1,r1,LSL #4
001098  e08c0304          ADD      r0,r12,r4,LSL #6
;;;618            	rLCDSADDR1= ( (addr>>22)<<21 ) | M5D(addr>>1);
00109c  e51fc16c          LDR      r12,|L1.3896|
0010a0  e00cc0a0          AND      r12,r12,r0,LSR #1
0010a4  e1a04b20          LSR      r4,r0,#22
0010a8  e18cca84          ORR      r12,r12,r4,LSL #21
0010ac  e3a0444d          MOV      r4,#0x4d000000
0010b0  e584c014          STR      r12,[r4,#0x14]
;;;619            	rLCDSADDR2= M5D(((addr+(SCR_XSIZE_TFT_240320*LCD_YSIZE_TFT_240320*2))>>1));
0010b4  e280ca4b          ADD      r12,r0,#0x4b000
0010b8  e51f4188          LDR      r4,|L1.3896|
0010bc  e004c0ac          AND      r12,r4,r12,LSR #1
0010c0  e3a0444d          MOV      r4,#0x4d000000
0010c4  e584c018          STR      r12,[r4,#0x18]
;;;620            //	CLR_IF();
;;;621                break;
0010c8  ea0000ad          B        |L1.4996|
                  |L1.4300|
;;;622    
;;;623            case MODE_TFT_1BIT_640480:
0010cc  e1a00000          MOV      r0,r0
;;;624            //	SET_IF();
;;;625            	#if (LCD_XSIZE_TFT_640480<512)
;;;626            	    while((rLCDCON1>>18)<=1);                       // if x<512
;;;627            	#else	
;;;628            	    while((rLCDCON1>>18)==0);                       // if x>512 ((12+4)*32) 
0010d0  e1a00000          MOV      r0,r0
                  |L1.4308|
0010d4  e3a0c44d          MOV      r12,#0x4d000000
0010d8  e59cc000          LDR      r12,[r12,#0]
0010dc  e1b0c92c          LSRS     r12,r12,#18
0010e0  0afffffb          BEQ      |L1.4308|
;;;629            	#endif
;;;630                addr=(UINT32T)frameBuffer1BitTft640480+(vx/8)+vy*(SCR_XSIZE_TFT_640480/8);
0010e4  e1a0c003          MOV      r12,r3
0010e8  e1a04fc3          ASR      r4,r3,#31
0010ec  e0834ea4          ADD      r4,r3,r4,LSR #29
0010f0  e51f5154          LDR      r5,|L1.4004|
0010f4  e5955000          LDR      r5,[r5,#0]  ; frameBuffer1BitTft640480
0010f8  e08541c4          ADD      r4,r5,r4,ASR #3
0010fc  e0815101          ADD      r5,r1,r1,LSL #2
001100  e0840285          ADD      r0,r4,r5,LSL #5
;;;631            	rLCDSADDR1= ( (addr>>22)<<21 ) | M5D(addr>>1);
001104  e51fc1d4          LDR      r12,|L1.3896|
001108  e00cc0a0          AND      r12,r12,r0,LSR #1
00110c  e1a04b20          LSR      r4,r0,#22
001110  e18cca84          ORR      r12,r12,r4,LSL #21
001114  e3a0444d          MOV      r4,#0x4d000000
001118  e584c014          STR      r12,[r4,#0x14]
;;;632            	rLCDSADDR2= M5D( ((addr+(SCR_XSIZE_TFT_640480*LCD_YSIZE_TFT_640480/8))>>1) );
00111c  e280cb4b          ADD      r12,r0,#0x12c00
001120  e51f41f0          LDR      r4,|L1.3896|
001124  e004c0ac          AND      r12,r4,r12,LSR #1
001128  e3a0444d          MOV      r4,#0x4d000000
00112c  e584c018          STR      r12,[r4,#0x18]
;;;633            //	CLR_IF();
;;;634                break;
001130  ea000093          B        |L1.4996|
                  |L1.4404|
;;;635    
;;;636            case MODE_TFT_8BIT_640480:
001134  e1a00000          MOV      r0,r0
;;;637            //	SET_IF(); 
;;;638            	#if (LCD_XSIZE_TFT_640480<64)
;;;639            	    while((rLCDCON1>>18)<=1);                       // if x<64
;;;640            	#else	
;;;641            	    while((rLCDCON1>>18)==0);                       // if x>64
001138  e1a00000          MOV      r0,r0
                  |L1.4412|
00113c  e3a0c44d          MOV      r12,#0x4d000000
001140  e59cc000          LDR      r12,[r12,#0]
001144  e1b0c92c          LSRS     r12,r12,#18
001148  0afffffb          BEQ      |L1.4412|
;;;642            	#endif
;;;643                addr=(UINT32T)frameBuffer8BitTft640480+(vx/1)+vy*(SCR_XSIZE_TFT_640480/1);
00114c  e51fc1a0          LDR      r12,|L1.4020|
001150  e59cc000          LDR      r12,[r12,#0]  ; frameBuffer8BitTft640480
001154  e08cc003          ADD      r12,r12,r3
001158  e0814101          ADD      r4,r1,r1,LSL #2
00115c  e08c0404          ADD      r0,r12,r4,LSL #8
;;;644            	rLCDSADDR1= ( (addr>>22)<<21 ) | M5D(addr>>1);
001160  e51fc230          LDR      r12,|L1.3896|
001164  e00cc0a0          AND      r12,r12,r0,LSR #1
001168  e1a04b20          LSR      r4,r0,#22
00116c  e18cca84          ORR      r12,r12,r4,LSL #21
001170  e3a0444d          MOV      r4,#0x4d000000
001174  e584c014          STR      r12,[r4,#0x14]
;;;645            	rLCDSADDR2= M5D(((addr+(SCR_XSIZE_TFT_640480*LCD_YSIZE_TFT_640480))>>1));
001178  e280ca96          ADD      r12,r0,#0x96000
00117c  e51f424c          LDR      r4,|L1.3896|
001180  e004c0ac          AND      r12,r4,r12,LSR #1
001184  e3a0444d          MOV      r4,#0x4d000000
001188  e584c018          STR      r12,[r4,#0x18]
;;;646            //	CLR_IF();
;;;647                break;
00118c  ea00007c          B        |L1.4996|
                  |L1.4496|
;;;648    
;;;649            case MODE_TFT_16BIT_640480:
001190  e1a00000          MOV      r0,r0
;;;650            //	SET_IF(); 
;;;651            	#if (LCD_XSIZE_TFT_640480<32)
;;;652            	    while((rLCDCON1>>18)<=1);                       // if x<32
;;;653            	#else	
;;;654            	    while((rLCDCON1>>18)==0);                       // if x>32
001194  e1a00000          MOV      r0,r0
                  |L1.4504|
001198  e3a0c44d          MOV      r12,#0x4d000000
00119c  e59cc000          LDR      r12,[r12,#0]
0011a0  e1b0c92c          LSRS     r12,r12,#18
0011a4  0afffffb          BEQ      |L1.4504|
;;;655            	#endif
;;;656                addr=(UINT32T)frameBuffer16BitTft640480+(vx*2)+vy*(SCR_XSIZE_TFT_640480*2);
0011a8  e51fc1f0          LDR      r12,|L1.4032|
0011ac  e59cc000          LDR      r12,[r12,#0]  ; frameBuffer16BitTft640480
0011b0  e08cc083          ADD      r12,r12,r3,LSL #1
0011b4  e0814101          ADD      r4,r1,r1,LSL #2
0011b8  e08c0484          ADD      r0,r12,r4,LSL #9
;;;657            	rLCDSADDR1= ( (addr>>22)<<21 ) | M5D(addr>>1);
0011bc  e51fc28c          LDR      r12,|L1.3896|
0011c0  e00cc0a0          AND      r12,r12,r0,LSR #1
0011c4  e1a04b20          LSR      r4,r0,#22
0011c8  e18cca84          ORR      r12,r12,r4,LSL #21
0011cc  e3a0444d          MOV      r4,#0x4d000000
0011d0  e584c014          STR      r12,[r4,#0x14]
;;;658            	rLCDSADDR2= M5D(((addr+(SCR_XSIZE_TFT_640480*LCD_YSIZE_TFT_640480*2))>>1));
0011d4  e280c94b          ADD      r12,r0,#0x12c000
0011d8  e51f42a8          LDR      r4,|L1.3896|
0011dc  e004c0ac          AND      r12,r4,r12,LSR #1
0011e0  e3a0444d          MOV      r4,#0x4d000000
0011e4  e584c018          STR      r12,[r4,#0x18]
;;;659            //	CLR_IF();
;;;660                break;
0011e8  ea000065          B        |L1.4996|
                  |L1.4588|
;;;661    
;;;662            case MODE_TFT_24BIT_640480:
0011ec  e1a00000          MOV      r0,r0
;;;663            //	SET_IF(); 
;;;664            	#if (LCD_XSIZE_TFT_640480<16)
;;;665            	    while((rLCDCON1>>18)<=1);                       // if x<16
;;;666            	#else	
;;;667            	    while((rLCDCON1>>18)==0);                       // if x>16
0011f0  e1a00000          MOV      r0,r0
                  |L1.4596|
0011f4  e3a0c44d          MOV      r12,#0x4d000000
0011f8  e59cc000          LDR      r12,[r12,#0]
0011fc  e1b0c92c          LSRS     r12,r12,#18
001200  0afffffb          BEQ      |L1.4596|
;;;668            	#endif
;;;669                addr=(UINT32T)frameBuffer24BitTft640480+(vx*4)+vy*(SCR_XSIZE_TFT_640480*4);
001204  e51fc230          LDR      r12,|L1.4060|
001208  e59cc000          LDR      r12,[r12,#0]  ; frameBuffer24BitTft640480
00120c  e08cc103          ADD      r12,r12,r3,LSL #2
001210  e0814101          ADD      r4,r1,r1,LSL #2
001214  e08c0504          ADD      r0,r12,r4,LSL #10
;;;670            	rLCDSADDR1= ( (addr>>22)<<21 ) | M5D(addr>>1);
001218  e51fc2e8          LDR      r12,|L1.3896|
00121c  e00cc0a0          AND      r12,r12,r0,LSR #1
001220  e1a04b20          LSR      r4,r0,#22
001224  e18cca84          ORR      r12,r12,r4,LSL #21
001228  e3a0444d          MOV      r4,#0x4d000000
00122c  e584c014          STR      r12,[r4,#0x14]
;;;671            	rLCDSADDR2= M5D(((addr+(SCR_XSIZE_TFT_640480*LCD_YSIZE_TFT_640480*4))>>1));
001230  e280c996          ADD      r12,r0,#0x258000
001234  e51f4304          LDR      r4,|L1.3896|
001238  e004c0ac          AND      r12,r4,r12,LSR #1
00123c  e3a0444d          MOV      r4,#0x4d000000
001240  e584c018          STR      r12,[r4,#0x18]
;;;672            //	CLR_IF();
;;;673                break;
001244  ea00004e          B        |L1.4996|
                  |L1.4680|
;;;674    
;;;675            case MODE_TFT_1BIT_800600:
001248  e1a00000          MOV      r0,r0
;;;676            //	SET_IF();
;;;677            	#if (LCD_XSIZE_TFT_800600<512)
;;;678                    while((rLCDCON1>>18)<=1);                       // if x<512
;;;679            	#else	
;;;680                    while((rLCDCON1>>18)==0);                       // if x>512 ((12+4)*32) 
00124c  e1a00000          MOV      r0,r0
                  |L1.4688|
001250  e3a0c44d          MOV      r12,#0x4d000000
001254  e59cc000          LDR      r12,[r12,#0]
001258  e1b0c92c          LSRS     r12,r12,#18
00125c  0afffffb          BEQ      |L1.4688|
;;;681            	#endif
;;;682                addr=(UINT32T)frameBuffer1BitTft800600+(vx/8)+vy*(SCR_XSIZE_TFT_800600/8);
001260  e1a04fc3          ASR      r4,r3,#31
001264  e0834ea4          ADD      r4,r3,r4,LSR #29
001268  e51f5288          LDR      r5,|L1.4072|
00126c  e5955000          LDR      r5,[r5,#0]  ; frameBuffer1BitTft800600
001270  e08541c4          ADD      r4,r5,r4,ASR #3
001274  e0815181          ADD      r5,r1,r1,LSL #3
001278  e0855201          ADD      r5,r5,r1,LSL #4
00127c  e0840185          ADD      r0,r4,r5,LSL #3
;;;683            	rLCDSADDR1= ( (addr>>22)<<21 ) | M5D(addr>>1);
001280  e51fc350          LDR      r12,|L1.3896|
001284  e00cc0a0          AND      r12,r12,r0,LSR #1
001288  e1a04b20          LSR      r4,r0,#22
00128c  e18cca84          ORR      r12,r12,r4,LSL #21
001290  e3a0444d          MOV      r4,#0x4d000000
001294  e584c014          STR      r12,[r4,#0x14]
;;;684            	rLCDSADDR2= M5D( ((addr+(SCR_XSIZE_TFT_800600*LCD_YSIZE_TFT_800600/8))>>1) );
001298  e280c907          ADD      r12,r0,#0x1c000
00129c  e28ccd53          ADD      r12,r12,#0x14c0
0012a0  e51f4370          LDR      r4,|L1.3896|
0012a4  e004c0ac          AND      r12,r4,r12,LSR #1
0012a8  e3a0444d          MOV      r4,#0x4d000000
0012ac  e584c018          STR      r12,[r4,#0x18]
;;;685            //	CLR_IF();
;;;686                break;
0012b0  ea000033          B        |L1.4996|
                  |L1.4788|
;;;687    
;;;688            case MODE_TFT_8BIT_800600:
0012b4  e1a00000          MOV      r0,r0
;;;689            //	SET_IF(); 
;;;690        	    #if (LCD_XSIZE_TFT_800600<64)
;;;691            	    while((rLCDCON1>>18)<=1);                       // if x<64
;;;692        	    #else	
;;;693        	        while((rLCDCON1>>18)==0);                       // if x>64
0012b8  e1a00000          MOV      r0,r0
                  |L1.4796|
0012bc  e3a0c44d          MOV      r12,#0x4d000000
0012c0  e59cc000          LDR      r12,[r12,#0]
0012c4  e1b0c92c          LSRS     r12,r12,#18
0012c8  0afffffb          BEQ      |L1.4796|
;;;694        	    #endif
;;;695                addr=(UINT32T)frameBuffer8BitTft800600+(vx/1)+vy*(SCR_XSIZE_TFT_800600/1);
0012cc  e51fc2d8          LDR      r12,|L1.4092|
0012d0  e59cc000          LDR      r12,[r12,#0]  ; frameBuffer8BitTft800600
0012d4  e08cc003          ADD      r12,r12,r3
0012d8  e0814181          ADD      r4,r1,r1,LSL #3
0012dc  e0844201          ADD      r4,r4,r1,LSL #4
0012e0  e08c0304          ADD      r0,r12,r4,LSL #6
;;;696            	rLCDSADDR1= ( (addr>>22)<<21 ) | M5D(addr>>1);
0012e4  e51fc3b4          LDR      r12,|L1.3896|
0012e8  e00cc0a0          AND      r12,r12,r0,LSR #1
0012ec  e1a04b20          LSR      r4,r0,#22
0012f0  e18cca84          ORR      r12,r12,r4,LSL #21
0012f4  e3a0444d          MOV      r4,#0x4d000000
0012f8  e584c014          STR      r12,[r4,#0x14]
;;;697            	rLCDSADDR2= M5D(((addr+(SCR_XSIZE_TFT_800600*LCD_YSIZE_TFT_800600))>>1));
0012fc  e280c80e          ADD      r12,r0,#0xe0000
001300  e28ccca6          ADD      r12,r12,#0xa600
001304  e51f43d4          LDR      r4,|L1.3896|
001308  e004c0ac          AND      r12,r4,r12,LSR #1
00130c  e3a0444d          MOV      r4,#0x4d000000
001310  e584c018          STR      r12,[r4,#0x18]
;;;698            //	CLR_IF();
;;;699                break;
001314  ea00001a          B        |L1.4996|
                  |L1.4888|
;;;700    
;;;701            case MODE_TFT_16BIT_800600:
001318  e1a00000          MOV      r0,r0
;;;702            //	SET_IF(); 
;;;703        	    #if (LCD_XSIZE_TFT_800600<32)
;;;704            	    while((rLCDCON1>>18)<=1);                       // if x<32
;;;705        	    #else	
;;;706            	    while((rLCDCON1>>18)==0);                       // if x>32
00131c  e1a00000          MOV      r0,r0
                  |L1.4896|
001320  e3a0c44d          MOV      r12,#0x4d000000
001324  e59cc000          LDR      r12,[r12,#0]
001328  e1b0c92c          LSRS     r12,r12,#18
00132c  0afffffb          BEQ      |L1.4896|
;;;707        	    #endif
;;;708                addr=(UINT32T)frameBuffer16BitTft800600+(vx*2)+vy*(SCR_XSIZE_TFT_800600*2);
001330  e51fc334          LDR      r12,|L1.4100|
001334  e59cc000          LDR      r12,[r12,#0]  ; frameBuffer16BitTft800600
001338  e08cc083          ADD      r12,r12,r3,LSL #1
00133c  e0814181          ADD      r4,r1,r1,LSL #3
001340  e0844201          ADD      r4,r4,r1,LSL #4
001344  e08c0384          ADD      r0,r12,r4,LSL #7
;;;709            	rLCDSADDR1= ( (addr>>22)<<21 ) | M5D(addr>>1);
001348  e51fc418          LDR      r12,|L1.3896|
00134c  e00cc0a0          AND      r12,r12,r0,LSR #1
001350  e1a04b20          LSR      r4,r0,#22
001354  e18cca84          ORR      r12,r12,r4,LSL #21
001358  e3a0444d          MOV      r4,#0x4d000000
00135c  e584c014          STR      r12,[r4,#0x14]
;;;710            	rLCDSADDR2= M5D(((addr+(SCR_XSIZE_TFT_800600*LCD_YSIZE_TFT_800600*2))>>1));
001360  e280c707          ADD      r12,r0,#0x1c0000
001364  e28ccb53          ADD      r12,r12,#0x14c00
001368  e51f4438          LDR      r4,|L1.3896|
00136c  e004c0ac          AND      r12,r4,r12,LSR #1
001370  e3a0444d          MOV      r4,#0x4d000000
001374  e584c018          STR      r12,[r4,#0x18]
;;;711            //	CLR_IF();
;;;712                break;
001378  ea000001          B        |L1.4996|
                  |L1.4988|
;;;713    
;;;714            default:
00137c  e1a00000          MOV      r0,r0
;;;715                break;
001380  e1a00000          MOV      r0,r0
                  |L1.4996|
001384  e1a00000          MOV      r0,r0                 ;527
;;;716       }   
;;;717    }    
001388  e8bd0030          POP      {r4,r5}
00138c  e12fff1e          BX       lr
;;;718        
                          ENDP

                  MoveViewPort PROC
;;;412    *********************************************************************************************/
;;;413    void MoveViewPort(int type)
001390  e92d41f0          PUSH     {r4-r8,lr}
;;;414    {
001394  e1a04000          MOV      r4,r0
;;;415        int vx=0,vy=0,vd;
001398  e3a07000          MOV      r7,#0
00139c  e3a06000          MOV      r6,#0
;;;416        vd=(type==MODE_STN_1BIT)*16+(type==MODE_STN_2BIT)*8+(type==MODE_STN_4BIT)*4
0013a0  e59f1394          LDR      r1,|L1.5948|
0013a4  e1540001          CMP      r4,r1
0013a8  1a000001          BNE      |L1.5044|
0013ac  e3a01001          MOV      r1,#1
0013b0  ea000000          B        |L1.5048|
                  |L1.5044|
0013b4  e3a01000          MOV      r1,#0
                  |L1.5048|
0013b8  e1a02201          LSL      r2,r1,#4
0013bc  e2441a01          SUB      r1,r4,#0x1000
0013c0  e2511002          SUBS     r1,r1,#2
0013c4  1a000001          BNE      |L1.5072|
0013c8  e3a01001          MOV      r1,#1
0013cc  ea000000          B        |L1.5076|
                  |L1.5072|
0013d0  e3a01000          MOV      r1,#0
                  |L1.5076|
0013d4  e0822181          ADD      r2,r2,r1,LSL #3
0013d8  e2441a01          SUB      r1,r4,#0x1000
0013dc  e2511004          SUBS     r1,r1,#4
0013e0  1a000001          BNE      |L1.5100|
0013e4  e3a01001          MOV      r1,#1
0013e8  ea000000          B        |L1.5104|
                  |L1.5100|
0013ec  e3a01000          MOV      r1,#0
                  |L1.5104|
0013f0  e0822101          ADD      r2,r2,r1,LSL #2
0013f4  e51f13f0          LDR      r1,|L1.4108|
0013f8  e1540001          CMP      r4,r1
0013fc  1a000001          BNE      |L1.5128|
001400  e3a01001          MOV      r1,#1
001404  ea000000          B        |L1.5132|
                  |L1.5128|
001408  e3a01000          MOV      r1,#0
                  |L1.5132|
00140c  e0822081          ADD      r2,r2,r1,LSL #1
001410  e2441a02          SUB      r1,r4,#0x2000
001414  e2511002          SUBS     r1,r1,#2
001418  1a000001          BNE      |L1.5156|
00141c  e3a01001          MOV      r1,#1
001420  ea000000          B        |L1.5160|
                  |L1.5156|
001424  e3a01000          MOV      r1,#0
                  |L1.5160|
001428  e0822101          ADD      r2,r2,r1,LSL #2
00142c  e59f130c          LDR      r1,|L1.5952|
001430  e1540001          CMP      r4,r1
001434  1a000001          BNE      |L1.5184|
001438  e3a01001          MOV      r1,#1
00143c  ea000000          B        |L1.5188|
                  |L1.5184|
001440  e3a01000          MOV      r1,#0
                  |L1.5188|
001444  e0822201          ADD      r2,r2,r1,LSL #4
001448  e2441c41          SUB      r1,r4,#0x4100
00144c  e2511002          SUBS     r1,r1,#2
001450  1a000001          BNE      |L1.5212|
001454  e3a01001          MOV      r1,#1
001458  ea000000          B        |L1.5216|
                  |L1.5212|
00145c  e3a01000          MOV      r1,#0
                  |L1.5216|
001460  e0822081          ADD      r2,r2,r1,LSL #1
001464  e2441901          SUB      r1,r4,#0x4000
001468  e2511f41          SUBS     r1,r1,#0x104
00146c  1a000001          BNE      |L1.5240|
001470  e3a01001          MOV      r1,#1
001474  ea000000          B        |L1.5244|
                  |L1.5240|
001478  e3a01000          MOV      r1,#0
                  |L1.5244|
00147c  e0822001          ADD      r2,r2,r1
001480  e51f1560          LDR      r1,|L1.3880|
001484  e1540001          CMP      r4,r1
001488  1a000001          BNE      |L1.5268|
00148c  e3a01001          MOV      r1,#1
001490  ea000000          B        |L1.5272|
                  |L1.5268|
001494  e3a01000          MOV      r1,#0
                  |L1.5272|
001498  e0822201          ADD      r2,r2,r1,LSL #4
00149c  e2441c42          SUB      r1,r4,#0x4200
0014a0  e2511002          SUBS     r1,r1,#2
0014a4  1a000001          BNE      |L1.5296|
0014a8  e3a01001          MOV      r1,#1
0014ac  ea000000          B        |L1.5300|
                  |L1.5296|
0014b0  e3a01000          MOV      r1,#0
                  |L1.5300|
0014b4  e0822081          ADD      r2,r2,r1,LSL #1
0014b8  e2441901          SUB      r1,r4,#0x4000
0014bc  e2511f81          SUBS     r1,r1,#0x204
0014c0  1a000001          BNE      |L1.5324|
0014c4  e3a01001          MOV      r1,#1
0014c8  ea000000          B        |L1.5328|
                  |L1.5324|
0014cc  e3a01000          MOV      r1,#0
                  |L1.5328|
0014d0  e0822001          ADD      r2,r2,r1
0014d4  e2441a42          SUB      r1,r4,#0x42000
0014d8  e2511016          SUBS     r1,r1,#0x16
0014dc  1a000001          BNE      |L1.5352|
0014e0  e3a01001          MOV      r1,#1
0014e4  ea000000          B        |L1.5356|
                  |L1.5352|
0014e8  e3a01000          MOV      r1,#0
                  |L1.5356|
0014ec  e1a00001          MOV      r0,r1
0014f0  e0811fa0          ADD      r1,r1,r0,LSR #31
0014f4  e08220c1          ADD      r2,r2,r1,ASR #1
0014f8  e59f1244          LDR      r1,|L1.5956|
0014fc  e1540001          CMP      r4,r1
001500  1a000001          BNE      |L1.5388|
001504  e3a01001          MOV      r1,#1
001508  ea000000          B        |L1.5392|
                  |L1.5388|
00150c  e3a01000          MOV      r1,#0
                  |L1.5392|
001510  e0822201          ADD      r2,r2,r1,LSL #4
001514  e2441b11          SUB      r1,r4,#0x4400
001518  e2511002          SUBS     r1,r1,#2
00151c  1a000001          BNE      |L1.5416|
001520  e3a01001          MOV      r1,#1
001524  ea000000          B        |L1.5420|
                  |L1.5416|
001528  e3a01000          MOV      r1,#0
                  |L1.5420|
00152c  e0822081          ADD      r2,r2,r1,LSL #1
001530  e2441b11          SUB      r1,r4,#0x4400
001534  e2511004          SUBS     r1,r1,#4
001538  1a000001          BNE      |L1.5444|
00153c  e3a01001          MOV      r1,#1
001540  ea000000          B        |L1.5448|
                  |L1.5444|
001544  e3a01000          MOV      r1,#0
                  |L1.5448|
001548  e0825001          ADD      r5,r2,r1
;;;417            +(type==MODE_CSTN_8BIT)*2+(type==MODE_CSTN_12BIT)*4 
;;;418            +(type==MODE_TFT_1BIT_240320)*16+(type==MODE_TFT_8BIT_240320)*2+(type==MODE_TFT_16BIT_240320)*1
;;;419            +(type==MODE_TFT_1BIT_640480)*16+(type==MODE_TFT_8BIT_640480)*2+(type==MODE_TFT_16BIT_640480)*1+(type==MODE_TFT_24BIT_640480)/2
;;;420            +(type==MODE_TFT_1BIT_800600)*16+(type==MODE_TFT_8BIT_800600)*2+(type==MODE_TFT_16BIT_800600)*1;        
;;;421        while(1)
00154c  ea000079          B        |L1.5944|
                  |L1.5456|
;;;422        {
;;;423        	switch(uart_getch())
001550  ebfffffe          BL       uart_getch
001554  e350006a          CMP      r0,#0x6a
001558  0a00000f          BEQ      |L1.5532|
00155c  ca000004          BGT      |L1.5492|
001560  e350000d          CMP      r0,#0xd
001564  0a000065          BEQ      |L1.5888|
001568  e3500069          CMP      r0,#0x69
00156c  1a000066          BNE      |L1.5900|
001570  ea000004          B        |L1.5512|
                  |L1.5492|
001574  e350006b          CMP      r0,#0x6b
001578  0a00000c          BEQ      |L1.5552|
00157c  e350006d          CMP      r0,#0x6d
001580  1a000061          BNE      |L1.5900|
001584  ea000031          B        |L1.5712|
                  |L1.5512|
;;;424        	{
;;;425            	case 'i':
001588  e1a00000          MOV      r0,r0
;;;426            	    if(vy>=vd)vy-=vd;    	   	
00158c  e1560005          CMP      r6,r5
001590  ba000000          BLT      |L1.5528|
001594  e0466005          SUB      r6,r6,r5
                  |L1.5528|
;;;427                    break;
001598  ea00005d          B        |L1.5908|
                  |L1.5532|
;;;428            
;;;429            	case 'j':
00159c  e1a00000          MOV      r0,r0
;;;430            	    if(vx>=vd)vx-=vd;
0015a0  e1570005          CMP      r7,r5
0015a4  ba000000          BLT      |L1.5548|
0015a8  e0477005          SUB      r7,r7,r5
                  |L1.5548|
;;;431                	break;
0015ac  ea000058          B        |L1.5908|
                  |L1.5552|
;;;432    
;;;433        	case 'k':
0015b0  e1a00000          MOV      r0,r0
;;;434        	    //if((type==MODE_TFT_1BIT_800600)|(type==MODE_TFT_8BIT_800600)|(type==MODE_TFT_16BIT_800600))   
;;;435        	    if((type&0x4000)&&(type&0x400))		  
0015b4  e3140901          TST      r4,#0x4000
0015b8  0a000006          BEQ      |L1.5592|
0015bc  e3140b01          TST      r4,#0x400
0015c0  0a000004          BEQ      |L1.5592|
;;;436        	    {
;;;437                    if(vx<=(SCR_XSIZE_TFT_800600-LCD_XSIZE_TFT_800600-vd))vx+=vd;   	    
0015c4  e2650e32          RSB      r0,r5,#0x320
0015c8  e1500007          CMP      r0,r7
0015cc  ba00001e          BLT      |L1.5708|
0015d0  e0877005          ADD      r7,r7,r5
0015d4  ea00001c          B        |L1.5708|
                  |L1.5592|
;;;438        	   }
;;;439        	    //else if((type==MODE_TFT_1BIT_640480)|(type==MODE_TFT_8BIT_640480)|(type==MODE_TFT_16BIT_640480)|(type==MODE_TFT_24BIT_640480))   
;;;440        	    else if((type&0x4000)&&(type&0x200))		  
0015d8  e3140901          TST      r4,#0x4000
0015dc  0a000006          BEQ      |L1.5628|
0015e0  e3140c02          TST      r4,#0x200
0015e4  0a000004          BEQ      |L1.5628|
;;;441        	    {
;;;442                    if(vx<=(SCR_XSIZE_TFT_640480-LCD_XSIZE_TFT_640480-vd))vx+=vd;   	    
0015e8  e2650d0a          RSB      r0,r5,#0x280
0015ec  e1500007          CMP      r0,r7
0015f0  ba000015          BLT      |L1.5708|
0015f4  e0877005          ADD      r7,r7,r5
0015f8  ea000013          B        |L1.5708|
                  |L1.5628|
;;;443        	   }
;;;444                //else if((type==MODE_TFT_8BIT_240320)|(type==MODE_TFT_16BIT_240320))   
;;;445        	    else if((type&0x4000)&&(type&0x100)) 
0015fc  e3140901          TST      r4,#0x4000
001600  0a000006          BEQ      |L1.5664|
001604  e3140c01          TST      r4,#0x100
001608  0a000004          BEQ      |L1.5664|
;;;446        	    {
;;;447                    if(vx<=(SCR_XSIZE_TFT_240320-LCD_XSIZE_TFT_240320-vd))vx+=vd;   	    
00160c  e26500f0          RSB      r0,r5,#0xf0
001610  e1500007          CMP      r0,r7
001614  ba00000c          BLT      |L1.5708|
001618  e0877005          ADD      r7,r7,r5
00161c  ea00000a          B        |L1.5708|
                  |L1.5664|
;;;448        	   }
;;;449                //else if((type==MODE_CSTN_8BIT)|(type==MODE_CSTN_12BIT))   
;;;450                else if(type&0x2000)   
001620  e3140a02          TST      r4,#0x2000
001624  0a000004          BEQ      |L1.5692|
;;;451                {
;;;452                    if(vx<=(SCR_XSIZE_CSTN-LCD_XSIZE_CSTN-vd))vx+=vd;   	    
001628  e2650d05          RSB      r0,r5,#0x140
00162c  e1500007          CMP      r0,r7
001630  ba000005          BLT      |L1.5708|
001634  e0877005          ADD      r7,r7,r5
001638  ea000003          B        |L1.5708|
                  |L1.5692|
;;;453               }
;;;454                else
;;;455                {
;;;456                    if(vx<=(SCR_XSIZE_STN-LCD_XSIZE_STN-vd))vx+=vd;   	    
00163c  e2650d05          RSB      r0,r5,#0x140
001640  e1500007          CMP      r0,r7
001644  ba000000          BLT      |L1.5708|
001648  e0877005          ADD      r7,r7,r5
                  |L1.5708|
;;;457               }
;;;458           	    break;
00164c  ea000030          B        |L1.5908|
                  |L1.5712|
;;;459    
;;;460        	case 'm':
001650  e1a00000          MOV      r0,r0
;;;461        	    if((type&0x4000)&&(type&0x400))
001654  e3140901          TST      r4,#0x4000
001658  0a00000a          BEQ      |L1.5768|
00165c  e3140b01          TST      r4,#0x400
001660  0a000008          BEQ      |L1.5768|
;;;462                {
;;;463                    if(vy<=(SCR_YSIZE_TFT_800600-LCD_YSIZE_TFT_800600-vd))vy+=vd; 
001664  e2650f96          RSB      r0,r5,#0x258
001668  e1500006          CMP      r0,r6
00166c  ba000001          BLT      |L1.5752|
001670  e0866005          ADD      r6,r6,r5
001674  ea000020          B        |L1.5884|
                  |L1.5752|
;;;464                    else if(vy==592) vy+=8;
001678  e3560e25          CMP      r6,#0x250
00167c  1a00001e          BNE      |L1.5884|
001680  e2866008          ADD      r6,r6,#8
001684  ea00001c          B        |L1.5884|
                  |L1.5768|
;;;465               }
;;;466        	    else if((type&0x4000)&&(type&0x200))
001688  e3140901          TST      r4,#0x4000
00168c  0a000006          BEQ      |L1.5804|
001690  e3140c02          TST      r4,#0x200
001694  0a000004          BEQ      |L1.5804|
;;;467                {
;;;468                    if(vy<=(SCR_YSIZE_TFT_640480-LCD_YSIZE_TFT_640480-vd))vy+=vd;   	    
001698  e2650e1e          RSB      r0,r5,#0x1e0
00169c  e1500006          CMP      r0,r6
0016a0  ba000015          BLT      |L1.5884|
0016a4  e0866005          ADD      r6,r6,r5
0016a8  ea000013          B        |L1.5884|
                  |L1.5804|
;;;469               }
;;;470        	    else if((type&0x4000)&&(type&0x100))
0016ac  e3140901          TST      r4,#0x4000
0016b0  0a000006          BEQ      |L1.5840|
0016b4  e3140c01          TST      r4,#0x100
0016b8  0a000004          BEQ      |L1.5840|
;;;471                {
;;;472                    if(vy<=(SCR_YSIZE_TFT_240320-LCD_YSIZE_TFT_240320-vd))vy+=vd;   	    
0016bc  e2650d05          RSB      r0,r5,#0x140
0016c0  e1500006          CMP      r0,r6
0016c4  ba00000c          BLT      |L1.5884|
0016c8  e0866005          ADD      r6,r6,r5
0016cc  ea00000a          B        |L1.5884|
                  |L1.5840|
;;;473               }
;;;474                else if(type&0x2000)   
0016d0  e3140a02          TST      r4,#0x2000
0016d4  0a000004          BEQ      |L1.5868|
;;;475                {
;;;476                    if(vy<=(SCR_YSIZE_CSTN-LCD_YSIZE_CSTN-vd))vy+=vd;   	    
0016d8  e26500f0          RSB      r0,r5,#0xf0
0016dc  e1500006          CMP      r0,r6
0016e0  ba000005          BLT      |L1.5884|
0016e4  e0866005          ADD      r6,r6,r5
0016e8  ea000003          B        |L1.5884|
                  |L1.5868|
;;;477               }
;;;478                else
;;;479                {
;;;480                    if(vy<=(SCR_YSIZE_STN-LCD_YSIZE_STN-vd))vy+=vd;   	    
0016ec  e26500f0          RSB      r0,r5,#0xf0
0016f0  e1500006          CMP      r0,r6
0016f4  ba000000          BLT      |L1.5884|
0016f8  e0866005          ADD      r6,r6,r5
                  |L1.5884|
;;;481               }
;;;482                
;;;483           	    break;
0016fc  ea000004          B        |L1.5908|
                  |L1.5888|
;;;484    
;;;485        	case '\r':
001700  e1a00000          MOV      r0,r0
;;;486           	    return;
;;;487    
;;;488        	default:
;;;489        	    break;
;;;490    		}
;;;491        	uart_printf("vx=%3d,vy=%3d\n",vx,vy);
;;;492        	Lcd_MoveViewPort(vx,vy,type);
;;;493       }
;;;494    }
001704  e8bd41f0          POP      {r4-r8,lr}
001708  e12fff1e          BX       lr
                  |L1.5900|
00170c  e1a00000          MOV      r0,r0                 ;488
001710  e1a00000          MOV      r0,r0                 ;489
                  |L1.5908|
001714  e1a00000          MOV      r0,r0                 ;427
001718  e1a02006          MOV      r2,r6                 ;491
00171c  e1a01007          MOV      r1,r7                 ;491
001720  e28f0020          ADR      r0,|L1.5960|
001724  ebfffffe          BL       uart_printf
001728  e1a02004          MOV      r2,r4                 ;492
00172c  e1a01006          MOV      r1,r6                 ;492
001730  e1a00007          MOV      r0,r7                 ;492
001734  ebfffffe          BL       Lcd_MoveViewPort
                  |L1.5944|
001738  eaffff84          B        |L1.5456|
;;;495    
                          ENDP

                  |L1.5948|
                          DCD      0x00001001
                  |L1.5952|
                          DCD      0x00004101
                  |L1.5956|
                          DCD      0x00004401
                  |L1.5960|
001748  76783d25          DCB      "vx=%3d,vy=%3d\n",0
00174c  33642c76
001750  793d2533
001754  640a00  
001757  00                DCB      0

                          AREA ||.data||, DATA, ALIGN=2

                  frameBuffer1Bit
                          DCD      0x00000000
                  frameBuffer2Bit
                          DCD      0x00000000
                  frameBuffer4Bit
                          DCD      0x00000000
                  frameBuffer8Bit
                          DCD      0x00000000
                  frameBuffer12Bit
                          DCD      0x00000000
                  frameBuffer8BitTft240320
                          DCD      0x00000000
                  frameBuffer16BitTft240320
                          DCD      0x00000000
                  frameBuffer1BitTft640480
                          DCD      0x00000000
                  frameBuffer8BitTft640480
                          DCD      0x00000000
                  frameBuffer16BitTft640480
                          DCD      0x00000000
                  frameBuffer16BitTft800480
                          DCD      0x00000000
                  frameBuffer24BitTft640480
                          DCD      0x00000000
                  frameBuffer1BitTft800600
                          DCD      0x00000000
                  frameBuffer8BitTft800600
                          DCD      0x00000000
                  frameBuffer16BitTft800600
                          DCD      0x00000000
