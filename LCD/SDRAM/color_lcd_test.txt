; generated by ARM C/C++ Compiler, 5.03 [Build 24]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\SDRAM\color_lcd_test.o --asm_dir=.\SDRAM\ --list_dir=.\SDRAM\ --depend=.\SDRAM\color_lcd_test.d --cpu=ARM920T --apcs=interwork -O0 -I..\Common\Inc -I.\Include -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\Samsung --omf_browse=.\SDRAM\color_lcd_test.crf Source\color_lcd_test.c]
                          ARM

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  lcd_init_app PROC
;;;55     *********************************************************************************************/
;;;56     void lcd_init_app()
000000  e92d4010          PUSH     {r4,lr}
;;;57     {
;;;58         Lcd_port_init();
000004  ebfffffe          BL       Lcd_port_init
;;;59         Lcd_Init(MODE_TFT_16BIT_800480);
000008  e59f0318          LDR      r0,|L1.808|
00000c  ebfffffe          BL       Lcd_Init
;;;60         Glib_Init(MODE_TFT_16BIT_800480);
000010  e59f0310          LDR      r0,|L1.808|
000014  ebfffffe          BL       Glib_Init
;;;61         Glib_ClearScr(0, MODE_TFT_16BIT_800480);
000018  e59f1308          LDR      r1,|L1.808|
00001c  e3a00000          MOV      r0,#0
000020  ebfffffe          BL       Glib_ClearScr
;;;62         Lcd_PowerEnable(0, 1);
000024  e3a01001          MOV      r1,#1
000028  e3a00000          MOV      r0,#0
00002c  ebfffffe          BL       Lcd_PowerEnable
;;;63         Lcd_EnvidOnOff(1);	  
000030  e3a00001          MOV      r0,#1
000034  ebfffffe          BL       Lcd_EnvidOnOff
;;;64         uart_printf(" [TFT 64K COLOR(16bit/1pixel) LCD TEST]\n");
000038  e28f0fbb          ADR      r0,|L1.812|
00003c  ebfffffe          BL       uart_printf
;;;65     
;;;66     }
000040  e8bd4010          POP      {r4,lr}
000044  e12fff1e          BX       lr
;;;67     
                          ENDP

                  lcd_init_app_end PROC
;;;75     *********************************************************************************************/
;;;76     void lcd_init_app_end()
000048  e92d4010          PUSH     {r4,lr}
;;;77     {
;;;78         Lcd_EnvidOnOff(0);
00004c  e3a00000          MOV      r0,#0
000050  ebfffffe          BL       Lcd_EnvidOnOff
;;;79         Lcd_Port_Return();
000054  ebfffffe          BL       Lcd_Port_Return
;;;80     }
000058  e8bd4010          POP      {r4,lr}
00005c  e12fff1e          BX       lr
;;;81     
                          ENDP

                  Lcd_Draw_Line PROC
;;;94     *********************************************************************************************/
;;;95     void Lcd_Draw_Line(INT16T usX0, INT16T usY0, INT16T usX1, INT16T usY1, UINT16T ucColor, UINT16T usWidth)
000060  e92d4ff0          PUSH     {r4-r11,lr}
;;;96     {
000064  e24dd024          SUB      sp,sp,#0x24
000068  e1a05000          MOV      r5,r0
00006c  e1a06001          MOV      r6,r1
000070  e1a07002          MOV      r7,r2
000074  e1a08003          MOV      r8,r3
000078  e59d404c          LDR      r4,[sp,#0x4c]
;;;97     	INT16T usDx;
;;;98     	INT16T usDy;
;;;99     	INT16T y_sign;
;;;100    	INT16T x_sign;
;;;101    	INT16T decision;
;;;102    	INT16T wCurx, wCury, wNextx, wNexty, wpy, wpx;
;;;103    
;;;104    	usDx = abs(usX0 - usX1);
00007c  e0550007          SUBS     r0,r5,r7
000080  4a000001          BMI      |L1.140|
000084  e1a01000          MOV      r1,r0
000088  ea000000          B        |L1.144|
                  |L1.140|
00008c  e2601000          RSB      r1,r0,#0
                  |L1.144|
000090  e1a09801          LSL      r9,r1,#16
000094  e1a09849          ASR      r9,r9,#16
;;;105    	usDy = abs(usY0 - usY1);
000098  e0560008          SUBS     r0,r6,r8
00009c  4a000001          BMI      |L1.168|
0000a0  e1a01000          MOV      r1,r0
0000a4  ea000000          B        |L1.172|
                  |L1.168|
0000a8  e2601000          RSB      r1,r0,#0
                  |L1.172|
0000ac  e1a0a801          LSL      r10,r1,#16
0000b0  e1a0a84a          ASR      r10,r10,#16
;;;106    	if( ((usDx >= usDy && (usX0 > usX1)) ||
0000b4  e159000a          CMP      r9,r10
0000b8  ba000001          BLT      |L1.196|
0000bc  e1550007          CMP      r5,r7
0000c0  ca000003          BGT      |L1.212|
                  |L1.196|
;;;107            ((usDy > usDx) && (usY0 > usY1))) )
0000c4  e15a0009          CMP      r10,r9
0000c8  da000007          BLE      |L1.236|
0000cc  e1560008          CMP      r6,r8
0000d0  da000005          BLE      |L1.236|
                  |L1.212|
;;;108        {
;;;109            GUISWAP(usX1, usX0);
0000d4  e0277005          EOR      r7,r7,r5
0000d8  e0255007          EOR      r5,r5,r7
0000dc  e0277005          EOR      r7,r7,r5
;;;110            GUISWAP(usY1, usY0);
0000e0  e0288006          EOR      r8,r8,r6
0000e4  e0266008          EOR      r6,r6,r8
0000e8  e0288006          EOR      r8,r8,r6
                  |L1.236|
;;;111        }
;;;112        y_sign = (usY1 - usY0) / usDy;
0000ec  e0480006          SUB      r0,r8,r6
0000f0  e1a0100a          MOV      r1,r10
0000f4  ebfffffe          BL       __aeabi_idivmod
0000f8  e1a00800          LSL      r0,r0,#16
0000fc  e1a00840          ASR      r0,r0,#16
000100  e58d0020          STR      r0,[sp,#0x20]
;;;113        x_sign = (usX1 - usX0) / usDx;
000104  e0470005          SUB      r0,r7,r5
000108  e1a01009          MOV      r1,r9
00010c  ebfffffe          BL       __aeabi_idivmod
000110  e1a00800          LSL      r0,r0,#16
000114  e1a00840          ASR      r0,r0,#16
000118  e58d001c          STR      r0,[sp,#0x1c]
;;;114    
;;;115        if( usDx >= usDy )
00011c  e159000a          CMP      r9,r10
000120  ba000060          BLT      |L1.680|
;;;116        {
;;;117            for( wCurx = usX0, wCury = usY0, wNextx = usX1,
000124  e58d5018          STR      r5,[sp,#0x18]
000128  e58d6014          STR      r6,[sp,#0x14]
00012c  e58d7010          STR      r7,[sp,#0x10]
;;;118                 wNexty = usY1, decision = (usDx >> 1);
000130  e58d800c          STR      r8,[sp,#0xc]
000134  e1a0b0c9          ASR      r11,r9,#1
000138  ea000055          B        |L1.660|
                  |L1.316|
;;;119                 wCurx <= wNextx; wCurx++, wNextx--, decision += usDy )
;;;120            {
;;;121                if( decision >= usDx )
00013c  e15b0009          CMP      r11,r9
000140  ba00000e          BLT      |L1.384|
;;;122                {
;;;123                    decision -= usDx;
000144  e04b0009          SUB      r0,r11,r9
000148  e1a00800          LSL      r0,r0,#16
00014c  e1a0b840          ASR      r11,r0,#16
;;;124                    wCury += y_sign;
000150  e59d0014          LDR      r0,[sp,#0x14]
000154  e59d1020          LDR      r1,[sp,#0x20]
000158  e0800001          ADD      r0,r0,r1
00015c  e1a00800          LSL      r0,r0,#16
000160  e1a00840          ASR      r0,r0,#16
000164  e58d0014          STR      r0,[sp,#0x14]
;;;125                    wNexty -= y_sign;
000168  e59d000c          LDR      r0,[sp,#0xc]
00016c  e59d1020          LDR      r1,[sp,#0x20]
000170  e0400001          SUB      r0,r0,r1
000174  e1a00800          LSL      r0,r0,#16
000178  e1a00840          ASR      r0,r0,#16
00017c  e58d000c          STR      r0,[sp,#0xc]
                  |L1.384|
;;;126                }
;;;127                for( wpy = wCury - usWidth / 2;
000180  e1a00004          MOV      r0,r4
000184  e0841fa0          ADD      r1,r4,r0,LSR #31
000188  e1a020c1          ASR      r2,r1,#1
00018c  e59d1014          LDR      r1,[sp,#0x14]
000190  e0411002          SUB      r1,r1,r2
000194  e1a01801          LSL      r1,r1,#16
000198  e1a01841          ASR      r1,r1,#16
00019c  e58d1008          STR      r1,[sp,#8]
0001a0  ea00000b          B        |L1.468|
                  |L1.420|
;;;128                     wpy <= wCury + usWidth / 2; wpy++ )
;;;129                {
;;;130                    PutPixel(wCurx, wpy, ucColor);
0001a4  e59f31ac          LDR      r3,|L1.856|
0001a8  e59d0018          LDR      r0,[sp,#0x18]
0001ac  e59d1008          LDR      r1,[sp,#8]
0001b0  e59d2048          LDR      r2,[sp,#0x48]
0001b4  e5933000          LDR      r3,[r3,#0]  ; PutPixel
0001b8  e1a0e00f          MOV      lr,pc
0001bc  e12fff13          BX       r3
0001c0  e59d0008          LDR      r0,[sp,#8]            ;128
0001c4  e2800001          ADD      r0,r0,#1              ;128
0001c8  e1a00800          LSL      r0,r0,#16             ;128
0001cc  e1a00840          ASR      r0,r0,#16             ;128
0001d0  e58d0008          STR      r0,[sp,#8]            ;128
                  |L1.468|
0001d4  e0841fa4          ADD      r1,r4,r4,LSR #31      ;128
0001d8  e1a020c1          ASR      r2,r1,#1              ;128
0001dc  e59d1014          LDR      r1,[sp,#0x14]         ;128
0001e0  e0822001          ADD      r2,r2,r1              ;128
0001e4  e59d1008          LDR      r1,[sp,#8]            ;128
0001e8  e1520001          CMP      r2,r1                 ;128
0001ec  aaffffec          BGE      |L1.420|
;;;131                }
;;;132    
;;;133                for( wpy = wNexty - usWidth / 2;
0001f0  e1a00004          MOV      r0,r4
0001f4  e0841fa0          ADD      r1,r4,r0,LSR #31
0001f8  e1a020c1          ASR      r2,r1,#1
0001fc  e59d100c          LDR      r1,[sp,#0xc]
000200  e0411002          SUB      r1,r1,r2
000204  e1a01801          LSL      r1,r1,#16
000208  e1a01841          ASR      r1,r1,#16
00020c  e58d1008          STR      r1,[sp,#8]
000210  ea00000b          B        |L1.580|
                  |L1.532|
;;;134                     wpy <= wNexty + usWidth / 2; wpy++ )
;;;135                {
;;;136                    PutPixel(wNextx, wpy, ucColor);
000214  e59f313c          LDR      r3,|L1.856|
000218  e59d0010          LDR      r0,[sp,#0x10]
00021c  e59d1008          LDR      r1,[sp,#8]
000220  e59d2048          LDR      r2,[sp,#0x48]
000224  e5933000          LDR      r3,[r3,#0]  ; PutPixel
000228  e1a0e00f          MOV      lr,pc
00022c  e12fff13          BX       r3
000230  e59d0008          LDR      r0,[sp,#8]            ;134
000234  e2800001          ADD      r0,r0,#1              ;134
000238  e1a00800          LSL      r0,r0,#16             ;134
00023c  e1a00840          ASR      r0,r0,#16             ;134
000240  e58d0008          STR      r0,[sp,#8]            ;134
                  |L1.580|
000244  e0841fa4          ADD      r1,r4,r4,LSR #31      ;134
000248  e1a020c1          ASR      r2,r1,#1              ;134
00024c  e59d100c          LDR      r1,[sp,#0xc]          ;134
000250  e0822001          ADD      r2,r2,r1              ;134
000254  e59d1008          LDR      r1,[sp,#8]            ;134
000258  e1520001          CMP      r2,r1                 ;134
00025c  aaffffec          BGE      |L1.532|
000260  e59d0018          LDR      r0,[sp,#0x18]         ;119
000264  e2800001          ADD      r0,r0,#1              ;119
000268  e1a00800          LSL      r0,r0,#16             ;119
00026c  e1a00840          ASR      r0,r0,#16             ;119
000270  e58d0018          STR      r0,[sp,#0x18]         ;119
000274  e59d0010          LDR      r0,[sp,#0x10]         ;119
000278  e2400001          SUB      r0,r0,#1              ;119
00027c  e1a00800          LSL      r0,r0,#16             ;119
000280  e1a00840          ASR      r0,r0,#16             ;119
000284  e58d0010          STR      r0,[sp,#0x10]         ;119
000288  e08b000a          ADD      r0,r11,r10            ;119
00028c  e1a00800          LSL      r0,r0,#16             ;119
000290  e1a0b840          ASR      r11,r0,#16            ;119
                  |L1.660|
000294  e59d0018          LDR      r0,[sp,#0x18]         ;119
000298  e59d1010          LDR      r1,[sp,#0x10]         ;119
00029c  e1500001          CMP      r0,r1                 ;119
0002a0  daffffa5          BLE      |L1.316|
0002a4  ea00006c          B        |L1.1116|
                  |L1.680|
;;;137                }
;;;138            }
;;;139        }
;;;140        else
;;;141        {
;;;142            for( wCurx = usX0, wCury = usY0, wNextx = usX1,
0002a8  e58d5018          STR      r5,[sp,#0x18]
0002ac  e58d6014          STR      r6,[sp,#0x14]
0002b0  e58d7010          STR      r7,[sp,#0x10]
;;;143                 wNexty = usY1, decision = (usDy >> 1);
0002b4  e58d800c          STR      r8,[sp,#0xc]
0002b8  e1a0b0ca          ASR      r11,r10,#1
0002bc  ea000062          B        |L1.1100|
                  |L1.704|
;;;144                 wCury <= wNexty; wCury++, wNexty--, decision += usDx )
;;;145            {
;;;146                if( decision >= usDy )
0002c0  e15b000a          CMP      r11,r10
0002c4  ba00000e          BLT      |L1.772|
;;;147                {
;;;148                    decision -= usDy;
0002c8  e04b000a          SUB      r0,r11,r10
0002cc  e1a00800          LSL      r0,r0,#16
0002d0  e1a0b840          ASR      r11,r0,#16
;;;149                    wCurx += x_sign;
0002d4  e59d0018          LDR      r0,[sp,#0x18]
0002d8  e59d101c          LDR      r1,[sp,#0x1c]
0002dc  e0800001          ADD      r0,r0,r1
0002e0  e1a00800          LSL      r0,r0,#16
0002e4  e1a00840          ASR      r0,r0,#16
0002e8  e58d0018          STR      r0,[sp,#0x18]
;;;150                    wNextx -= x_sign;
0002ec  e59d0010          LDR      r0,[sp,#0x10]
0002f0  e59d101c          LDR      r1,[sp,#0x1c]
0002f4  e0400001          SUB      r0,r0,r1
0002f8  e1a00800          LSL      r0,r0,#16
0002fc  e1a00840          ASR      r0,r0,#16
000300  e58d0010          STR      r0,[sp,#0x10]
                  |L1.772|
;;;151                }
;;;152                for( wpx = wCurx - usWidth / 2;
000304  e1a00004          MOV      r0,r4
000308  e0841fa0          ADD      r1,r4,r0,LSR #31
00030c  e1a020c1          ASR      r2,r1,#1
000310  e59d1018          LDR      r1,[sp,#0x18]
000314  e0411002          SUB      r1,r1,r2
000318  e1a01801          LSL      r1,r1,#16
00031c  e1a01841          ASR      r1,r1,#16
000320  e58d1004          STR      r1,[sp,#4]
000324  ea000018          B        |L1.908|
                  |L1.808|
                          DCD      0x00004208
                  |L1.812|
00032c  205b5446          DCB      " [TFT 64K COLOR(16bit/1pixel) LCD TEST]\n",0
000330  54203634
000334  4b20434f
000338  4c4f5228
00033c  31366269
000340  742f3170
000344  6978656c
000348  29204c43
00034c  44205445
000350  53545d0a
000354  00      
000355  00                DCB      0
000356  00                DCB      0
000357  00                DCB      0
                  |L1.856|
                          DCD      PutPixel
                  |L1.860|
;;;153                     wpx <= wCurx + usWidth / 2; wpx++ )
;;;154                {
;;;155                    PutPixel(wpx, wCury, ucColor);
00035c  e51f300c          LDR      r3,|L1.856|
000360  e59d0004          LDR      r0,[sp,#4]
000364  e59d1014          LDR      r1,[sp,#0x14]
000368  e59d2048          LDR      r2,[sp,#0x48]
00036c  e5933000          LDR      r3,[r3,#0]  ; PutPixel
000370  e1a0e00f          MOV      lr,pc
000374  e12fff13          BX       r3
000378  e59d0004          LDR      r0,[sp,#4]            ;153
00037c  e2800001          ADD      r0,r0,#1              ;153
000380  e1a00800          LSL      r0,r0,#16             ;153
000384  e1a00840          ASR      r0,r0,#16             ;153
000388  e58d0004          STR      r0,[sp,#4]            ;153
                  |L1.908|
00038c  e0841fa4          ADD      r1,r4,r4,LSR #31      ;153
000390  e1a020c1          ASR      r2,r1,#1              ;153
000394  e59d1018          LDR      r1,[sp,#0x18]         ;153
000398  e0822001          ADD      r2,r2,r1              ;153
00039c  e59d1004          LDR      r1,[sp,#4]            ;153
0003a0  e1520001          CMP      r2,r1                 ;153
0003a4  aaffffec          BGE      |L1.860|
;;;156                }
;;;157    
;;;158                for( wpx = wNextx - usWidth / 2;
0003a8  e1a00004          MOV      r0,r4
0003ac  e0841fa0          ADD      r1,r4,r0,LSR #31
0003b0  e1a020c1          ASR      r2,r1,#1
0003b4  e59d1010          LDR      r1,[sp,#0x10]
0003b8  e0411002          SUB      r1,r1,r2
0003bc  e1a01801          LSL      r1,r1,#16
0003c0  e1a01841          ASR      r1,r1,#16
0003c4  e58d1004          STR      r1,[sp,#4]
0003c8  ea00000b          B        |L1.1020|
                  |L1.972|
;;;159                     wpx <= wNextx + usWidth / 2; wpx++ )
;;;160                {
;;;161                    PutPixel(wpx, wNexty, ucColor);
0003cc  e51f307c          LDR      r3,|L1.856|
0003d0  e59d0004          LDR      r0,[sp,#4]
0003d4  e59d100c          LDR      r1,[sp,#0xc]
0003d8  e59d2048          LDR      r2,[sp,#0x48]
0003dc  e5933000          LDR      r3,[r3,#0]  ; PutPixel
0003e0  e1a0e00f          MOV      lr,pc
0003e4  e12fff13          BX       r3
0003e8  e59d0004          LDR      r0,[sp,#4]            ;159
0003ec  e2800001          ADD      r0,r0,#1              ;159
0003f0  e1a00800          LSL      r0,r0,#16             ;159
0003f4  e1a00840          ASR      r0,r0,#16             ;159
0003f8  e58d0004          STR      r0,[sp,#4]            ;159
                  |L1.1020|
0003fc  e0841fa4          ADD      r1,r4,r4,LSR #31      ;159
000400  e1a020c1          ASR      r2,r1,#1              ;159
000404  e59d1010          LDR      r1,[sp,#0x10]         ;159
000408  e0822001          ADD      r2,r2,r1              ;159
00040c  e59d1004          LDR      r1,[sp,#4]            ;159
000410  e1520001          CMP      r2,r1                 ;159
000414  aaffffec          BGE      |L1.972|
000418  e59d0014          LDR      r0,[sp,#0x14]         ;144
00041c  e2800001          ADD      r0,r0,#1              ;144
000420  e1a00800          LSL      r0,r0,#16             ;144
000424  e1a00840          ASR      r0,r0,#16             ;144
000428  e58d0014          STR      r0,[sp,#0x14]         ;144
00042c  e59d000c          LDR      r0,[sp,#0xc]          ;144
000430  e2400001          SUB      r0,r0,#1              ;144
000434  e1a00800          LSL      r0,r0,#16             ;144
000438  e1a00840          ASR      r0,r0,#16             ;144
00043c  e58d000c          STR      r0,[sp,#0xc]          ;144
000440  e08b0009          ADD      r0,r11,r9             ;144
000444  e1a00800          LSL      r0,r0,#16             ;144
000448  e1a0b840          ASR      r11,r0,#16            ;144
                  |L1.1100|
00044c  e59d000c          LDR      r0,[sp,#0xc]          ;144
000450  e59d1014          LDR      r1,[sp,#0x14]         ;144
000454  e1510000          CMP      r1,r0                 ;144
000458  daffff98          BLE      |L1.704|
                  |L1.1116|
;;;162                }
;;;163            }
;;;164        }
;;;165    }
00045c  e28dd024          ADD      sp,sp,#0x24
000460  e8bd4ff0          POP      {r4-r11,lr}
000464  e12fff1e          BX       lr
;;;166    
                          ENDP

                  color_lcd_test PROC
;;;174    *********************************************************************************************/
;;;175    void color_lcd_test(void)
000468  e24dd020          SUB      sp,sp,#0x20
;;;176    {
;;;177    	int i=290;
00046c  e1a00000          MOV      r0,r0
;;;178    	int j = 150;
000470  e3a00096          MOV      r0,#0x96
000474  e58d0018          STR      r0,[sp,#0x18]
;;;179    	float xx = 0;
000478  e3a00000          MOV      r0,#0
00047c  e58d0014          STR      r0,[sp,#0x14]
;;;180    	int lastX = 50;
000480  e3a0a032          MOV      r10,#0x32
;;;181    	int lastY = 230;
000484  e3a000e6          MOV      r0,#0xe6
000488  e58d0010          STR      r0,[sp,#0x10]
;;;182    	int time =300;
00048c  e1a00000          MOV      r0,r0
;;;183    	uart_printf("\n LCD display Test Example (please look at LCD screen)\n");
000490  e28f0f5e          ADR      r0,|L1.1552|
000494  ebfffffe          BL       uart_printf
;;;184    
;;;185    	lcd_init_app();
000498  ebfffffe          BL       lcd_init_app
;;;186    	BitmapViewTft16Bit_800480((UINT8T *)(g_ucBitmap));
00049c  e59f01a4          LDR      r0,|L1.1608|
0004a0  ebfffffe          BL       BitmapViewTft16Bit_800480
;;;187    
;;;188    	/*
;;;189    	Lcd_Draw_Line(5,5,795,475,BLACK,1);
;;;190    	Lcd_Draw_Line(10,10,790,470,RED,1);
;;;191    	Lcd_Draw_Line(15,15,785,465,BLUE,1);
;;;192    	Lcd_Draw_Line(20,20,780,460,GREEN,1);*/
;;;193    
;;;194    	Lcd_Draw_Line(0, 230, 900, 230, RED, 5);
0004a4  e3a00005          MOV      r0,#5
0004a8  e3a01b3e          MOV      r1,#0xf800
0004ac  e3a030e6          MOV      r3,#0xe6
0004b0  e3a02fe1          MOV      r2,#0x384
0004b4  e58d1000          STR      r1,[sp,#0]
0004b8  e1a01003          MOV      r1,r3
0004bc  e58d0004          STR      r0,[sp,#4]
0004c0  e3a00000          MOV      r0,#0
0004c4  ebfffffe          BL       Lcd_Draw_Line
;;;195    	Lcd_Draw_Line(50, 0, 50, 460, RED, 5);
0004c8  e3a00005          MOV      r0,#5
0004cc  e3a01b3e          MOV      r1,#0xf800
0004d0  e3a03f73          MOV      r3,#0x1cc
0004d4  e3a02032          MOV      r2,#0x32
0004d8  e58d1000          STR      r1,[sp,#0]
0004dc  e3a01000          MOV      r1,#0
0004e0  e58d0004          STR      r0,[sp,#4]
0004e4  e1a00002          MOV      r0,r2
0004e8  ebfffffe          BL       Lcd_Draw_Line
;;;196    	//Lcd_Draw_Line(0, 230, 100,100, RED, 5);
;;;197    	while(j--)
0004ec  ea000040          B        |L1.1524|
                  |L1.1264|
;;;198    	{
;;;199    		Lcd_Draw_Line(lastX, lastY, lastX+5,230-(sin(xx+0.1)*50), RED, 2);
0004f0  e59d0014          LDR      r0,[sp,#0x14]
0004f4  ebfffffe          BL       __aeabi_f2d
0004f8  e88d0003          STM      sp,{r0,r1}
0004fc  e59f2148          LDR      r2,|L1.1612|
000500  e59f3148          LDR      r3,|L1.1616|
000504  ebfffffe          BL       __aeabi_dadd
000508  e58d0008          STR      r0,[sp,#8]
00050c  e58d100c          STR      r1,[sp,#0xc]
000510  ebfffffe          BL       ||sin||
000514  e1a06000          MOV      r6,r0
000518  e3a02000          MOV      r2,#0
00051c  e59f3130          LDR      r3,|L1.1620|
000520  ebfffffe          BL       __aeabi_dmul
000524  e1a04000          MOV      r4,r0
000528  e3a02000          MOV      r2,#0
00052c  e59f3124          LDR      r3,|L1.1624|
000530  ebfffffe          BL       __aeabi_drsub
000534  e1a08000          MOV      r8,r0
000538  ebfffffe          BL       __aeabi_d2iz
00053c  e1a00800          LSL      r0,r0,#16
000540  e1a0b840          ASR      r11,r0,#16
000544  e3a00002          MOV      r0,#2
000548  e3a01b3e          MOV      r1,#0xf800
00054c  e1a0300b          MOV      r3,r11
000550  e58d0004          STR      r0,[sp,#4]
000554  e28a0005          ADD      r0,r10,#5
000558  e1a02800          LSL      r2,r0,#16
00055c  e1a02842          ASR      r2,r2,#16
000560  e58d1000          STR      r1,[sp,#0]
000564  e59d0010          LDR      r0,[sp,#0x10]
000568  e1a01800          LSL      r1,r0,#16
00056c  e1a01841          ASR      r1,r1,#16
000570  e1a0080a          LSL      r0,r10,#16
000574  e1a00840          ASR      r0,r0,#16
000578  ebfffffe          BL       Lcd_Draw_Line
;;;200    		
;;;201    		lastX = lastX+5;
00057c  e28aa005          ADD      r10,r10,#5
;;;202    		lastY = 230-(sin(xx+0.1)*50);
000580  e59d0014          LDR      r0,[sp,#0x14]
000584  ebfffffe          BL       __aeabi_f2d
000588  e1a06000          MOV      r6,r0
00058c  e59f20b8          LDR      r2,|L1.1612|
000590  e59f30b8          LDR      r3,|L1.1616|
000594  ebfffffe          BL       __aeabi_dadd
000598  e88d0003          STM      sp,{r0,r1}
00059c  ebfffffe          BL       ||sin||
0005a0  e1a08000          MOV      r8,r0
0005a4  e3a02000          MOV      r2,#0
0005a8  e59f30a4          LDR      r3,|L1.1620|
0005ac  ebfffffe          BL       __aeabi_dmul
0005b0  e1a04000          MOV      r4,r0
0005b4  e3a02000          MOV      r2,#0
0005b8  e59f3098          LDR      r3,|L1.1624|
0005bc  ebfffffe          BL       __aeabi_drsub
0005c0  e58d0008          STR      r0,[sp,#8]
0005c4  e58d100c          STR      r1,[sp,#0xc]
0005c8  ebfffffe          BL       __aeabi_d2iz
0005cc  e58d0010          STR      r0,[sp,#0x10]
;;;203    		xx+=0.1;
0005d0  e59d0014          LDR      r0,[sp,#0x14]
0005d4  ebfffffe          BL       __aeabi_f2d
0005d8  e1a04000          MOV      r4,r0
0005dc  e59f2068          LDR      r2,|L1.1612|
0005e0  e59f3068          LDR      r3,|L1.1616|
0005e4  ebfffffe          BL       __aeabi_dadd
0005e8  e1a06000          MOV      r6,r0
0005ec  ebfffffe          BL       __aeabi_d2f
0005f0  e58d0014          STR      r0,[sp,#0x14]
                  |L1.1524|
0005f4  e59d0018          LDR      r0,[sp,#0x18]         ;197
0005f8  e2401001          SUB      r1,r0,#1              ;197
0005fc  e3500000          CMP      r0,#0                 ;197
000600  e58d1018          STR      r1,[sp,#0x18]         ;197
000604  1affffb9          BNE      |L1.1264|
;;;204    	}
;;;205    
;;;206    	while(1);
000608  e1a00000          MOV      r0,r0
                  |L1.1548|
00060c  eafffffe          B        |L1.1548|
;;;207     
;;;208    
;;;209    }
                          ENDP

                  |L1.1552|
000610  0a204c43          DCB      "\n LCD display Test Example (please look at LCD screen)"
000614  44206469
000618  73706c61
00061c  79205465
000620  73742045
000624  78616d70
000628  6c652028
00062c  706c6561
000630  7365206c
000634  6f6f6b20
000638  6174204c
00063c  43442073
000640  63726565
000644  6e29    
000646  0a00              DCB      "\n",0
                  |L1.1608|
                          DCD      g_ucBitmap
                  |L1.1612|
                          DCD      0x9999999a
                  |L1.1616|
                          DCD      0x3fb99999
                  |L1.1620|
                          DCD      0x40490000
                  |L1.1624|
                          DCD      0x406cc000
